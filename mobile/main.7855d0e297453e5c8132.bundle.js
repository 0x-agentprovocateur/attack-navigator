webpackJsonp([1],{0:function(e,t,n){e.exports=n("x35b")},"5KBY":function(e,t){e.exports=".help {\n  font-size: 11pt; }\n\n.content {\n  padding: 5px; }\n\n.toc {\n  list-style: none; }\n\n.toc ul {\n    list-style: none; }\n\ncode {\n  color: black;\n  border: 1px solid #ddd;\n  padding: 1px 2px; }\n"},"5xMp":function(e,t){e.exports='\x3c!--The content below is only a placeholder and can be replaced.--\x3e\n\x3c!-- <div *ngIf="techniques && tactics"> --\x3e\n<tabs>\n    \x3c!-- <tab [tabTitle]="\'grid\'">\n        <DataTable></DataTable>\n    </tab> --\x3e\n</tabs>\n<ul style="font-size: 7pt; list-style: none; padding: 0">\n    <li>MITRE ATT&CK<sup style="font-size: 5pt">TM</sup> Navigator v{{nav_version}}</li>\n    <li><a target="_blank" href="https://github.com/mitre/attack-navigator/issues">Bugs or feature requests?</a></li>\n</ul>\n\n\x3c!-- </div> --\x3e\n\x3c!-- <div *ngIf="!techniques && !tactics">\n    loading...\n</div> --\x3e\n'},"6GLz":function(e,t){function n(e){return Promise.resolve().then(function(){throw new Error("Cannot find module '"+e+"'.")})}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="6GLz"},JhGu:function(e,t){e.exports='<div class="controlsContainer">\n    <ul class="control-sections">\n        <li >\n            <div class="section-label">\n                selection controls\n            </div>\n\n            \x3c!-- Search --\x3e\n            <div class="control-row-item">\n\n                <div class="control-row-button dropdown noselect"\n                    (click)="currentDropdown = currentDropdown !== \'search\' ? \'search\' : null;"\n                    matTooltipPosition="below"\n                    [matTooltip]="\'search\'">\n                    <img src="assets/ic_search_black_24px.svg"/>\n                </div>\n\n                <div class="dropdown-container search" *ngIf="currentDropdown === \'search\'">\n\n                    <mat-form-field style="width:100%; margin-top:5px; padding: 10px; padding-bottom:0px;">\n                        <input matInput\n\n                        [(ngModel)]="searchString"\n                        (input)="updateSearchDropdown()"\n                        placeholder="Search for techniques here...">\n\n                    </mat-form-field>\n                    <div><b>Properties searched:</b></div>\n\n                    <div>\n                        <div class="noselect">\n                            <input id="search-name-checkbox" class="checkbox-custom" type="checkbox" [(ngModel)]="searchingName" (change)="updateSearchDropdown()">\n                            <label for="search-name-checkbox" class="checkbox-custom-label">Name</label>\n                            <input id="search-id-checkbox" class="checkbox-custom" type="checkbox" [(ngModel)]="searchingID" (change)="updateSearchDropdown()">\n                            <label for="search-id-checkbox" class="checkbox-custom-label">ID</label>\n                            <input id="search-description-checkbox" class="checkbox-custom" type="checkbox" [(ngModel)]="searchingDescription" (change)="updateSearchDropdown()">\n                            <label for="search-description-checkbox" class="checkbox-custom-label">Description</label>\n                        </div>\n                    </div>\n\n                    <div>\n                        <button  (click)="selectAllInSearch(); populateEditFields();" style="width:48.5%" class="button">select all</button>\n                        <button (click)="deselectAllInSearch(); populateEditFields();" style="width:48.5%; margin-left:2px;" class="button">deselect all</button>\n                    </div>\n\n                    <div class="search-list">\n                        <table>\n                            <tr  *ngFor="let result of searchResults" class="search-list-item">\n                                <td>\n                                    <div class="search-list-item-label">\n                                        {{result.name}}\n                                    </div>\n                                </td>\n                                <td><a style="margin-right:2px" [href]="result.external_references_url" target="_blank">view</a></td>\n                                <td><button  (click)="viewModel.addToTechniqueSelection(result); populateEditFields();" class="button">select</button></td>\n                                <td><button (click)="viewModel.removeFromTechniqueSelection(result); populateEditFields();" class="button">deselect</button></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n\n            \x3c!-- Multi-select --\x3e\n            <div class="control-row-item">\n                <div class="control-row-button dropdown noselect"\n                    (click)="currentDropdown = currentDropdown !== \'multiselect\' ? \'multiselect\' : null;"\n                    matTooltipPosition="below"\n                    [matTooltip]="\'multi-select\'">\n                    <img src="assets/ic_playlist_add_black_24px.svg"/>\n                </div>\n                <div class="dropdown-container multiselect" *ngIf="currentDropdown === \'multiselect\'">\n                    <div class="multiselect-grouping" *ngFor="let multiSelectGroup of [{data: threatGroupList, label: \'Threat Groups\'}, {data: softwareGroupList, label: \'Software\'}]">\n                        <div class="multiselect-grouping-label">{{multiSelectGroup.label}}</div>\n                        <div class="multiselect-list">\n                            <table>\n                                <tr  *ngFor="let securityInstance of multiSelectGroup.data" class="multiselect-list-item" [class.selected]="isSecurityInstanceSelected(securityInstance)">\n                                    <td>\n                                        <div class="multiselect-list-item-label">\n                                            {{securityInstance.name}}\n                                        </div>\n                                    </td>\n                                    <td><a *ngIf="securityInstance.url" style="margin-right:2px" [href]="securityInstance.url" target="_blank">view</a><span *ngIf="!securityInstance.url">----</span></td>\n                                    <td><button (click)="selectSecurityInstance(securityInstance); populateEditFields();" class="multiselect-list-item-button button">select</button></td>\n                                    <td><button (click)="deselectSecurityInstance(securityInstance); populateEditFields();" class="multiselect-list-item-button button">deselect</button></td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            \x3c!-- stop editing --\x3e\n            <div class="control-row-item">\n                <div class="control-row-button noselect"\n                     (click)="viewModel.clearTechniqueSelection(); currentDropdown = null;"\n                     matTooltipPosition="below"\n                     matTooltip="deselect {{this.viewModel.selectedTechniques.length}} techniques">\n                    <img src="assets/ic_clear_black_24px.svg" alt="deselect all"/>\n                    <span class="deselectNumber">{{this.viewModel.selectedTechniques.length}}</span>\n                </div>\n            </div>\n\n\n        </li>\n        <li>\n            <div class="section-label">\n                layer controls\n            </div>\n\n            \x3c!-- layer description --\x3e\n            <div class="control-row-item">\n\n                <div class="control-row-button dropdown noselect"\n                     (click)="currentDropdown = currentDropdown !== \'description\' ? \'description\' : null"\n                     matTooltipPosition="below"\n                     matTooltip="layer information">\n                     <img src="assets/ic_description_black_24px.svg" alt="layer information" />\n                 </div>\n\n                 \x3c!-- description input (invisible, absolute) --\x3e\n                 <div class="dropdown-container inputfield"\n                      *ngIf="currentDropdown === \'description\'">\n\n                    \x3c!-- layer name field --\x3e\n                    <mat-form-field>\n                        <input matInput\n                               type="text"\n                               placeholder="name"\n                               [(ngModel)]="viewModel.name" />\n                    </mat-form-field>\n\n                    \x3c!-- layer description field --\x3e\n                    <mat-form-field>\n                        <textarea matInput\n                                    matTextareaAutosize\n                                    placeholder="description"\n                                    [(ngModel)]="viewModel.description">\n                        </textarea>\n                    </mat-form-field>\n                 </div>\n             </div>\n\n\n\n            \x3c!-- save locally --\x3e\n            <div class="control-row-item">\n                <div class="control-row-button noselect"\n                    (click)="saveLayerLocally()"\n                    matTooltipPosition="below"\n                    matTooltip="download layer">\n                    <img src="assets/ic_file_download_black_24px.svg" alt="save layer"/>\n                </div>\n            </div>\n\n            \x3c!-- Filters --\x3e\n            <div class="control-row-item">\n\n                <div class="control-row-button dropdown noselect"\n                    (click)="currentDropdown = currentDropdown !== \'filters\' ? \'filters\' : null;"\n                    matTooltipPosition="below"\n                    matTooltip="filters">\n                    <img src="assets/ic_filter_list_black_24px.svg"/>\n                </div>\n                <div class="dropdown-container filters" *ngIf="currentDropdown === \'filters\'">\n                    <div class="filter" *ngFor="let filter of [\'platforms\', \'stages\']">\n                        <b class="filter-label">{{filter}}</b>\n                        <div class="filter-option" *ngFor="let filterOption of viewModel.filters[filter].options" >\n                            \x3c!-- <label class="noselect"><input type="checkbox" (click)="viewModel.filters.toggleInFilter(filter, filterOption); filterTechniques()" [checked]="viewModel.filters.inFilter(filter, filterOption)">{{filterOption}}</label> --\x3e\n                            <input [id]="filterOption" class="checkbox-custom" type="checkbox" (click)="viewModel.filters.toggleInFilter(filter, filterOption); filterTechniques()" [checked]="viewModel.filters.inFilter(filter, filterOption)">\n                            <label for="{{filterOption}}" class="checkbox-custom-label noselect">{{filterOption}}</label>\n                        </div>\n                        \x3c!-- <div class="filter-option" *ngFor="let filterOption of viewModel.filters[filter].options" (click)="viewModel.filters.toggleInFilter(filter, filterOption); filterTechniques()">\n                            {{filterOption}}  {{viewModel.filters.inFilter(filter, filterOption)}}\n                        </div> --\x3e\n                    </div>\n                    \x3c!-- <mat-select placeholder="platforms" [(ngModel)]="platformControl"\n                        multiple disableRipple autofocus (change)="filterTechniques(); viewModel.filters.platforms.selection = platformsControl">\n                        <mat-option *ngFor="let platformOption of viewModel.filters.platforms.options" [value]="platformOption">{{platformOption}}</mat-option>\n                    </mat-select> --\x3e\n                    \x3c!-- <filter-menu [dataTable]="this"></filter-menu> --\x3e\n                </div>\n            </div>\n\n            \x3c!-- sorting --\x3e\n            <div class="control-row-item">\n                <div class="control-row-button noselect"\n                    (click)="viewModel.sorting = (viewModel.sorting + 1) % 4; filterTechniques()"\n                    matTooltipPosition="below"\n                    [matTooltip]="[\'sorting alphabetically ascending\', \'sorting alphabetically descending\', \'sorting by score ascending\', \'sorting by score descending\'][viewModel.sorting]">\n                    <img [src]="[\'assets/ic_sort_alphabetically_ascending_black_24px.svg\', \'assets/ic_sort_alphabetically_descending_black_24px.svg\', \'assets/ic_sort_numerically_ascending_black_24px.svg\', \'assets/ic_sort_numerically_descending_black_24px.svg\'][viewModel.sorting]" alt="sorting"/>\n                </div>\n            </div>\n\n            \x3c!-- set up gradients --\x3e\n            <div class="control-row-item">\n                <div class="control-row-button dropdown noselect"\n                    (click)="currentDropdown = currentDropdown !== \'gradients\' ? \'gradients\' : null; viewModel.updateGradient()"\n                    matTooltipPosition="below"\n                    matTooltip="scoring gradient setup">\n                    <img src="assets/ic_palette_black_24px.svg"/>\n                </div>\n                <div class="dropdown-container gradients" *ngIf="currentDropdown === \'gradients\'">\n                    <div class="gradient-controls">\n                        <table>\n                            <tr class="minmax top">\n                                <td>Low value:</td>\n                                <td class="col2"><input type="number" (input)="viewModel.updateGradient()" [(ngModel)]="viewModel.gradient.minValue" [max]=viewModel.gradient.maxValue></td>\n                            </tr>\n                            <tr>\n                                <td class="buttons">\n                                    <div *ngFor="let gradientStep of viewModel.gradient.colors; let $i = index">\n                                        <div class="left">\n                                            <button (click)="viewModel.removeGradientColor($i)" [disabled]="viewModel.gradient.colors.length == 2">remove</button>\n                                        </div>\n                                        <div class="right">\n                                            <select [(ngModel)]="gradientStep.color" (ngModelChange)="viewModel.updateGradient()">\n                                                <option *ngFor="let color of viewModel.gradient.options" [ngValue]="color">{{color}}</option>\n                                                \x3c!-- option shows up if a nonstandard option is selected, from uploading a custom layer --\x3e\n                                                <option *ngIf="!(viewModel.gradient.labelToColor.hasOwnProperty(gradientStep.color))" [ngValue]=gradientStep.color>{{gradientStep.color}}</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td class="col2" [style.background-image]="sanitize(viewModel.gradient.gradient.css(\'linear\', \'to bottom\'))"> </td>\n                            </tr>\n                            <tr>\n                                <td><button class="addcolor" (click)="viewModel.addGradientColor();">add another color</button></td>\n                            </tr>\n                            <tr class="minmax bottom">\n                                <td>High value: </td>\n                                <td class="col2 "><input type="number" (input)="viewModel.updateGradient()" [(ngModel)]="viewModel.gradient.maxValue" [min]=viewModel.gradient.minValue></td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div class="display-buttons">\n                        <div class="squarebutton dropdown noselect" (click)="presetsMenuVisible = !presetsMenuVisible">\n                            presets<span style="font-size:5pt">\u25bc</span>\n                        </div >\n                        <div class="dropdown-container presetsmenu" *ngIf="presetsMenuVisible">\n                            <div class="squarebutton noselect gradient" (click)="viewModel.gradient.setGradientPreset(\'redgreen\'); presetsMenuVisible = false; viewModel.updateGradient()" [style.background-image]="sanitize(viewModel.gradient.presetToTinyColor(\'redgreen\'))">red to green</div>\n                            <div class="squarebutton noselect gradient" (click)="viewModel.gradient.setGradientPreset(\'greenred\'); presetsMenuVisible = false; viewModel.updateGradient()" [style.background-image]="sanitize(viewModel.gradient.presetToTinyColor(\'greenred\'))">green to red</div>\n                            <div class="squarebutton noselect gradient" (click)="viewModel.gradient.setGradientPreset(\'bluered\'); presetsMenuVisible = false; viewModel.updateGradient()" [style.background-image]="sanitize(viewModel.gradient.presetToTinyColor(\'bluered\'))">blue to red</div>\n                            <div class="squarebutton noselect gradient" (click)="viewModel.gradient.setGradientPreset(\'redblue\'); presetsMenuVisible = false; viewModel.updateGradient()" [style.background-image]="sanitize(viewModel.gradient.presetToTinyColor(\'redblue\'))">red to blue</div>\n                            <div class="squarebutton noselect gradient" (click)="viewModel.gradient.setGradientPreset(\'whiteblue\'); presetsMenuVisible = false; viewModel.updateGradient()" [style.background-image]="sanitize(viewModel.gradient.presetToTinyColor(\'whiteblue\'))">white to blue</div>\n                            <div class="squarebutton noselect gradient" (click)="viewModel.gradient.setGradientPreset(\'whitered\'); presetsMenuVisible = false; viewModel.updateGradient()" [style.background-image]="sanitize(viewModel.gradient.presetToTinyColor(\'whitered\'))">white to red</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            \x3c!-- show or hide disabled techniques --\x3e\n            <div class="control-row-item">\n                <div class="control-row-button noselect"\n                     (click)="viewModel.hideDisabled = !viewModel.hideDisabled; filterTechniques()"\n                     matTooltipPosition="below"\n                     matTooltip="show/hide disabled">\n                     <img [src]="viewModel.hideDisabled ? \'assets/ic_visibility_off_black_24px.svg\' : \'assets/ic_visibility_black_24px.svg\'" [alt]="viewModel.hideDisabled ? \'show disabled\' : \'hide disabled\'"/>\n                 </div>\n             </div>\n\n             \x3c!-- mini/full view --\x3e\n            <div class="control-row-item">\n                <div class="control-row-button noselect"\n                     (click)="viewModel.viewFullTable = !viewModel.viewFullTable"\n                     matTooltipPosition="below"\n                     matTooltip="view full/compact">\n                     <img [src]="viewModel.viewFullTable ? \'assets/ic_view_large_black_24px.svg\' : \'assets/ic_view_small_black_24px.svg\'" [alt]="viewModel.viewFullTable ? \'view compact\' : \'view full\'"/>\n                 </div>\n             </div>\n\n        </li>\n        <li>\n            <div class="section-label">\n                technique controls\n            </div>\n            \x3c!-- TECHNIQUE CONTROLS --\x3e\n            \x3c!-- enable/disable technique --\x3e\n            <div class="control-row-item">\n\n                <div class="control-row-button noselect"\n                     (click)="setSelectedState()"\n                     matTooltipPosition="below"\n                     matTooltip="toggle state"\n                     [matTooltipDisabled]="!viewModel.isCurrentlyEditing()">\n                     <img [src]="viewModel.isCurrentlyEditing() ? \'assets/ic_texture_black_24px.svg\' : \'assets/ic_texture_gray_24px.svg\'" alt="toggle state"/>\n                 </div>\n             </div>\n\n            \x3c!-- background color --\x3e\n            <div class="control-row-item">\n\n                <div class="control-row-button dropdown noselect"\n                     (click)="viewModel.isCurrentlyEditing() ? currentDropdown = currentDropdown !== \'colorpicker\' ? \'colorpicker\' : null : continue"\n                     matTooltipPosition="below"\n                     matTooltip="background color"\n                     [matTooltipDisabled]="!viewModel.isCurrentlyEditing()"\n                     [style.color]="viewModel.isCurrentlyEditing() ? \'#000000\' : \'#aaaaaa\'">\n\n                    <svg border="#dddddd" [attr.fill]="viewModel.isCurrentlyEditing() ? \'#000000\' : \'#aaaaaa\'" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M0 0h24v24H0z" fill="none"/>\n                        <path d="M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z"/>\n                        <path [attr.class]="viewModel.isCurrentlyEditing() ? viewModel.getEditingCommonValue(\'color\') : none" d="M0 20h24v4H0z"/>\n                    </svg>\n                </div>\n                \x3c!-- color picker (invisible, absolute)--\x3e\n                <div class="colorpicker dropdown-container"\n                     *ngIf="currentDropdown === \'colorpicker\'">\n\n                    <div class="color-block wide noselect dropdown"\n                         (click)="viewModel.editSelectedTechniques(\'color\', \'\')">\n                        no color\n                    </div>\n                    <div class="color-block square"\n                         *ngFor="let color of [\'#e60d0d\', \'#fc3b3b\', \'#fc6b6b\', \'#fca2a2\', \'#e6550d\', \'#fd8d3c\', \'#fdae6b\', \'#fdd0a2\', \'#e6d60d\', \'#fce93b\', \'#fcf26b\', \'#fcf3a2\', \'#31a354\', \'#74c476\', \'#a1d99b\', \'#c7e9c0\', \'#3182bd\', \'#6baed6\', \'#9ecae1\', \'#c6dbef\', \'#756bb1\', \'#9e9ac8\', \'#bcbddc\', \'#dadaeb\', \'#636363\', \'#969696\', \'#bdbdbd\', \'#d9d9d9\']"\n                         [style.background]="color"\n                         (click)="viewModel.editSelectedTechniques(\'color\', color)"></div>\n                </div>\n            </div>\n\n\n            \x3c!-- score --\x3e\n            <div class="control-row-item">\n\n                <div class="control-row-button dropdown noselect"\n                     (click)="viewModel.isCurrentlyEditing() ? currentDropdown = currentDropdown !== \'score\' ? \'score\' : null : continue"\n                     matTooltipPosition="below"\n                     matTooltip="scoring"\n                     [matTooltipDisabled]="!viewModel.isCurrentlyEditing()"\n                     [style.color]="viewModel.isCurrentlyEditing() ? \'#000000\' : \'#aaaaaa\'">\n                     <img [src]="viewModel.isCurrentlyEditing() ? \'assets/ic_insert_chart_black_24px.svg\' : \'assets/ic_insert_chart_gray_24px.svg\'" alt="score"/>\n                </div>\n                <div class="dropdown-container inputfield left"\n                     *ngIf="currentDropdown === \'score\'">\n                     <mat-form-field>\n                         \x3c!-- update data whenever it is typed in --\x3e\n                         <input matInput\n                                type="text"\n                                onkeypress="return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 46"\n                                [(ngModel)]="scoreEditField"\n                                placeholder="score"\n                                (input)="viewModel.editSelectedTechniques(\'score\', $event.target.value); viewModel.editSelectedTechniques(\'scoreColor\', viewModel.gradient.getColor($event.target.value)); filterTechniques()">\n                         <mat-hint style="color: red" align="start" *ngIf="validateScoreInput()">not a number</mat-hint>\n                     </mat-form-field>\n                </div>\n            </div>\n\n\n            \x3c!-- comment --\x3e\n            <div class="control-row-item">\n\n                <div class="control-row-button dropdown noselect"\n                     (click)="viewModel.isCurrentlyEditing() ? currentDropdown = currentDropdown !== \'comment\' ? \'comment\' : null : continue"\n                     matTooltipPosition="below"\n                     matTooltip="comment"\n                     [matTooltipDisabled]="!viewModel.isCurrentlyEditing()"\n                     [style.color]="viewModel.isCurrentlyEditing() ? \'#000000\' : \'#aaaaaa\'">\n                     <img [src]="viewModel.isCurrentlyEditing() ? \'assets/ic_insert_comment_black_24px.svg\' : \'assets/ic_insert_comment_gray_24px.svg\'" alt="comment" />\n                 </div>\n                 \x3c!-- comment input (invisible, absolute) --\x3e\n                 <div class="dropdown-container inputfield left"\n                      *ngIf="currentDropdown === \'comment\'">\n\n                    <mat-form-field>\n                        <textarea matInput\n                                  matTextareaAutosize\n                                  placeholder="comment"\n                                  [(ngModel)]="commentEditField"\n                                  (input)="viewModel.editSelectedTechniques(\'comment\', $event.target.value)">\n                        </textarea>\n                    </mat-form-field>\n                 </div>\n             </div>\n        </li>\n    </ul>\n</div>\n\n\n<div class="tableContainer" oncontextmenu="return false">\n    <div class="dataTable noselect" [class.mini]="!viewModel.viewFullTable">\n        <table>\n            <tr>\n                <td *ngFor="let tactic of dataService.tacticNames(filteredTechniques)"\n                    class="header column"\n                    [class.anti-highlight]="viewModel.highlightedTactic && tactic != viewModel.highlightedTactic">\n\n                    <div class="cell link header"\n                        [matTooltipDisabled]="viewModel.viewFullTable"\n                         matTooltip="{{tacticDisplayNames[tactic]}}"\n                         matTooltipPosition="right"\n                         (click)="clickTactic(tactic)"\n\n                         [class.mini]="!viewModel.viewFullTable">\n                         {{viewModel.viewFullTable ? tacticDisplayNames[tactic] : acronym(tacticDisplayNames[tactic])}}\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor="let tactic of dataService.tacticNames(filteredTechniques)"\n                    class="column"\n                    [class.anti-highlight]="viewModel.highlightedTactic && tactic != viewModel.highlightedTactic">\n\n                    <div class="cell itemcount">\n                        {{tactics[tactic].length}}<span *ngIf="viewModel.viewFullTable"> items</span>\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor="let tactic of dataService.tacticNames(filteredTechniques)"\n                    class="techniques column"\n                    [class.anti-highlight]="viewModel.highlightedTactic && tactic != viewModel.highlightedTactic">\n\n                    <div *ngFor="let technique of tactics[tactic]"\n\n                         (click)="techniqueSelectEvent(technique, $event.shiftKey)"\n                         (contextmenu)="rightClickTechnique(technique, $event)"\n\n                         (mouseenter)="viewModel.highlightedTechnique = technique;"\n                         (mouseleave)="viewModel.highlightedTechnique = null"\n\n                         [class]="getClass(technique, !viewModel.viewFullTable)"\n                         [ngStyle]="getTechniqueBackground(technique)">\n                         <span [style.color]="getTechniqueTextColor(technique, viewModel.highlightedTactic && tactic != viewModel.highlightedTactic)">{{viewModel.viewFullTable ? technique.name : acronym(technique.name)}}</span>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>\n\n\n\x3c!--\n   ___ ___  _  _ _____ _____  _______   __  __ ___ _  _ _   _ ___     _   _  _ ___    _____ ___   ___  _  _____ ___ ___  ___\n  / __/ _ \\| \\| |_   _| __\\ \\/ /_   _| |  \\/  | __| \\| | | | / __|   /_\\ | \\| |   \\  |_   _/ _ \\ / _ \\| ||_   _|_ _| _ \\/ __|\n | (_| (_) | .` | | | | _| >  <  | |   | |\\/| | _|| .` | |_| \\__ \\  / _ \\| .` | |) |   | || (_) | (_) | |__| |  | ||  _/\\__ \\\n  \\___\\___/|_|\\_| |_| |___/_/\\_\\ |_|   |_|  |_|___|_|\\_|\\___/|___/ /_/ \\_\\_|\\_|___/    |_| \\___/ \\___/|____|_| |___|_|  |___/\n --\x3e\n\n\n\x3c!-- Context Menu: page cover --\x3e\n<div *ngIf="contextMenuVisible"\n    (click)="contextMenuVisible = false; "\n    (contextmenu)="contextMenuVisible = false;"\n    class="contextMenu-cover">\n</div>\n\x3c!-- Context Menu: Menu --\x3e\n<div [hidden]="!contextMenuVisible"\n     class="contextMenu-box dropdown-container noselect"\n     [id]="\'contextMenu\'+viewModelsService.getViewModelUID(viewModel)">\n    <div class="contextMenu-section">\n        <div class="contextMenu-button" (click)="viewModel.replaceTechniqueSelection(contextMenuSelectedTechnique); contextMenuVisible = false; populateEditFields();">\n            select\n        </div>\n        <div class="contextMenu-button" (click)="viewModel.addToTechniqueSelection(contextMenuSelectedTechnique); contextMenuVisible = false; populateEditFields();">\n            add to selection\n        </div>\n        <div class="contextMenu-button" (click)="viewModel.removeFromTechniqueSelection(contextMenuSelectedTechnique); contextMenuVisible = false; populateEditFields();">\n            remove from selection\n        </div>\n    </div>\n    <div class="contextMenu-section">\n        <div class="contextMenu-button" (click)="viewModel.selectAllTechniques(); contextMenuVisible = false; populateEditFields();">\n            select all\n        </div>\n        <div class="contextMenu-button" (click)="viewModel.clearTechniqueSelection(); contextMenuVisible = false; populateEditFields();">\n            deselect all\n        </div>\n        <div class="contextMenu-button" (click)="viewModel.invertSelection(); contextMenuVisible = false; populateEditFields();">\n            invert selection\n        </div>\n    </div>\n    <div class="contextMenu-section">\n        <div class="contextMenu-button" (click)="openURL($event, contextMenuSelectedTechnique); contextMenuVisible = false; ">\n            view technique\n        </div>\n    </div>\n</div>\n\n\x3c!-- Tooltip --\x3e\n<div class="tooltip noselect" [id]="\'tooltip\'+viewModelsService.getViewModelUID(viewModel)">\n    <div *ngIf="viewModel.highlightedTechnique">\n        <div>\n            <span *ngIf="!viewModel.viewFullTable">{{viewModel.highlightedTechnique.name}} (</span>{{viewModel.highlightedTechnique.technique_id}}<span *ngIf="!viewModel.viewFullTable">)</span>\n        </div>\n        \x3c!-- <table>\n            <tr *ngIf="viewModel.getTechniqueVM(viewModel.highlightedTechnique.technique_id).score">\n                <td>Score:</td>\n                <td>{{viewModel.getTechniqueVM(viewModel.highlightedTechnique.technique_id).score}}</td>\n            </tr>\n            <tr *ngIf="viewModel.getTechniqueVM(viewModel.highlightedTechnique.technique_id).comment">\n                <td>Comment:</td>\n                <td>{{viewModel.getTechniqueVM(viewModel.highlightedTechnique.technique_id).comment}}</td>\n            </tr>\n        </table> --\x3e\n        <div *ngIf="viewModel.getTechniqueVM(viewModel.highlightedTechnique.technique_id).score">\n            <b>Score:</b> {{viewModel.getTechniqueVM(viewModel.highlightedTechnique.technique_id).score}}\n        </div>\n        <div *ngIf="viewModel.getTechniqueVM(viewModel.highlightedTechnique.technique_id).comment">\n            <b>Comment:</b> {{viewModel.getTechniqueVM(viewModel.highlightedTechnique.technique_id).comment}}\n        </div>\n\n\n    </div>\n\n</div>\n'},RZ7q:function(e,t){e.exports='<div class="help">\n\n    <h1>Table of Contents</h1>\n\n    <ul class="toc">\n        <li>\n            <a href="#about">About</a>\n        </li>\n        <li>\n            <a href="#help_Layers">Layers</a>\n            <ul>\n                <li><a href="#help_Creating_New_Layers">Creating New Layers</a></li>\n                <li><a href="#help_Saving_and_Loading_Layers">Saving and Loading Layers</a></li>\n                <li><a href="#help_Creating_Layers_from_Other_Layers">Creating Layers from Other Layers</a></li>\n            </ul>\n        </li>\n\n        <li>\n            <a href="#help_Layer_Controls">Layer Controls</a>\n            <ul>\n                <li><a href="#help_Layer_Information">Layer Information</a></li>\n                <li><a href="#help_Sorting">Sorting</a></li>\n                <li><a href="#help_Filtering">Filtering</a></li>\n                <li><a href="#help_Scoring">Scoring Gradient Setup</a></li>\n                <li><a href="#help_Hiding_Disabled_Techniques">Hiding Disabled Techniques</a></li>\n                <li>\n                    <a href="#help_Changing_Views">Changing Views</a>\n                    <ul>\n                        <li><a href="#help_Full_View">Full View</a></li>\n                        <li><a href="#help_Compact_View">Compact View</a></li>\n                    </ul>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href="#help_Technique_Controls">Technique Controls</a>\n            <ul>\n\n                <li><a href="#help_Disabling_Techniques">Disabling Techniques</a></li>\n                <li><a href="#help_Assigning_Manual_Colors">Assigning Manual Colors</a></li>\n                <li><a href="#help_Scoring_Techniques">Scoring Techniques</a></li>\n                <li><a href="#help_Adding_Comments_to_Techniques">Adding Comments to Techniques</a></li>\n            </ul>\n        </li>\n        <li>\n            <a href="#help_Selecting_Techniques">Selecting Techniques</a>\n            <ul>\n                <li><a href="#help_Selecting_with_the_Mouse">Selecting with the Mouse</a></li>\n                <li><a href="#help_Search_Interface">Search Interface</a></li>\n                <li><a href="#help_Multiselct_Interface">Multiselect Interface</a></li>\n            </ul>\n        </li>\n        <li><a href="#notice">Notice</a></li>\n\n    </ul>\n\n    <h1 id="about"> ATT&CK Navigator Version {{nav_version}}</h1>\n    <p>\n        The ATT&CK Navigator is designed to provide basic navigation and\n        annotation of ATT&CK matrices, something that people are already doing\n        today in tools like Excel. We\'ve designed it to be simple and generic -\n        you can use the Navigator to visualize your defensive coverage, your\n        red/blue team planning, the frequency of detected techniques or anything\n        else you want to do. The Navigator doesn\'t care - it just allows you to\n        manipulate the cells in the matrix (color coding, adding a comment,\n        assigning a numerical value, etc.). We thought having a simple tool that\n        everyone could use to visualize the matrix would help make it easy to\n        use ATT&CK.\n    </p>\n    <p>\n        The principal feature of the Navigator is the ability for users to\n        define layers - custom views of the ATT&CK knowledge base - e.g. showing\n        just those techniques for a particular platform or highlighting\n        techniques a specific adversary has been known to use. Layers can be\n        created interactively within the Navigator or generated programmatically\n        and then visualized via the Navigator.\n    </p>\n    <p>\n        Bug reports and feature requests can be submitted to our <a href="https://github.com/mitre/attack-navigator/issues">GitHub Issue Tracker</a>.\n        The source code for the ATT&CK Navigator can be retrieved from our\n        <a href="https://github.com/mitre/attack-navigator">GitHub repository</a>.\n    </p>\n\n\n    \x3c!-- sections --\x3e\n    <h1 id="help_Layers">Layers</h1>\n    <p>\n      A layer constitutes a view of the tactics and techniques matrix for a\n      specific technology domain. Version 1 of the Navigator can manipulate\n      either the Enterprise (Windows, Linux & Mac) or Mobile (Android & iOS)\n      ATT&CK technology domain knowledge bases. Within a technology domain, the\n      Navigator allows you to filter your view of the matrix in a variety of\n      ways, displaying the tactics and techniques that are important to you.\n    </p>\n    <p>\n      You can view the definition of any technique in the visible matrix by\n      right-clicking on the technique and selecting "view technique" in the\n      pop-up menu. A new browser tab will be opened displaying the definition of\n      the technique. In this way the Navigator allows you to explore a given\n      ATT&CK matrix and access the definitions of the techniques.\n    </p>\n    <p>\n      Beyond the filters, layers also provide a means to customize your view of\n      the matrix. To that end you can <a href="#help_Assigning_Manual_Colors">color</a>, <a href="#help_Hiding_Disabled_Techniques">hide</a>, <a href="#help_Adding_Comments_to_Techniques">comment</a>, and assign <a href="#help_Scoring_Techniques">numeric\n      scores</a> to techniques to aid in analysis of threats and your defenses\n      against those threats. As stated earlier, the Navigator is designed to be\n      simple, allowing you to assign whatever meaning you want to the\n      color-codings, scores, and comments. This way the Navigator can support\n      whatever you want to do without requiring changes to the Navigator code\n      itself.\n    </p>\n    <p>\n      Each layer created is independent of other layers. However, layers can be\n      <a href="#help_Creating_Layers_from_Other_Layers">combined</a> in ways to support analysis, or <a href="#help_Saving_and_Loading_Layers">saved locally</a>. Layer files are\n      saved in easy to parse and easy to generate JSON file so that ATT&CK data\n      can be used in other applications, analyzed beyond the capability of the\n      ATT&CK Navigator, and generated by tools for import into the Navigator.\n      The Layer file format is described <a href="assets/NavigatorLayerFileFormatv1.pdf">here</a>.\n    </p>\n\n\n    <h2 id="help_Creating_New_Layers">Creating New Layers</h2>\n    <p>\n        To create a new layer, open a new tab and click the "Create New Layer" button.\n        Note that for performance reasons, the Navigator currently imposes a limit of\n        ten (10) active layers at any given point in time.\n    </p>\n    <h2 id="help_Saving_and_Loading_Layers">Saving and Loading Layers</h2>\n    <p>\n        Layers can be saved by clicking the "save layer" button (<img src="assets/ic_file_download_black_24px.svg">). This will open a dialog\n        to save a layer configuration file to your local computer. This contains\n        the configuration for the techniques that have been customized\n        (commented, colored, assigned a score, or disabled) as well as the\n        scoring gradient setup, filter selection, layer name, layer description,\n        view configuration.\n    </p>\n    <p>\n        Saved layer configuration files can be opened in the ATT&CK navigator to\n        restore a layer you\'ve worked on previously. To do so, open a new tab\n        and open the "Open Existing Layer" panel. Then click "Upload from\n        local", and select your saved configuration file. Doing so will restore\n        your saved layer to the ATT&CK navigator.\n    </p>\n    <h2 id="help_Creating_Layers_from_Other_Layers">Creating Layers from Other Layers</h2>\n    <p>\n        Layers can be created which inherit properties from other layers. Several fields\n        exist which can be used to choose which layers to inherit properties from:\n    </p>\n    <ul>\n        <li>\n            <p>\n                <b>Score Expression:</b> Technique <a href="#help_Scoring_Techniques">scores</a>  in the created layer are\n                initialized to the result of this expression. This field should take\n                the form of an equation or constant, using variables for layers.\n                Layer variables are shown in yellow on tabs when the "create layer\n                from other layers" panel is opened:\n            </p>\n            <img src="assets/image_scoreVariableExample.png" height="100px">\n            <p>\n                Each technique\'s score is created independently using the score expression. For example,\n                with a score expression of <code>a+b</code>, some technique <i>t</i> in the output layer would\n                be the sum of <i>t<sub>a</sub></i> and <i>t<sub>b</sub></i>.\n            </p>\n            <p>\n                Expressions can also be comparative, for example <code>a>b</code>\n                will create a layer with a score of 1 whereever <code>a>b</code> and\n                0 whereever <code>a<=b</code>. Such boolean expressions can be\n                extended using <code>and</code>, <code>or</code>, <code>xor</code>\n                and <code>not</code>. See <a href="http://mathjs.org/docs/expressions/syntax.html#operators">\n                    this page</a> for a  full list of operators.\n                </p>\n                Some example score expressions:\n                <ul>\n                    <li>\n                        <code>(a+b)/2</code> (average two layers)\n                    </li>\n                    <li>\n                        <code>a+b+c</code>\n                    </li>\n                    <li>\n                        <code>a*(b+c)</code>\n                    </li>\n                    <li>\n                        <code>100-a</code> (reverse the scoring of <code>a</code>, assuming <code>a</code> is on a 0-100 scale)\n                    </li>\n                    <li>\n                        <code>(a>b) and (a>=75)</code>\n                    </li>\n                </ul>\n            </li>\n            <li>\n                <b>Coloring:</b> choose which layer to inherit <a href="#help_Assigning_Manual_Colors">manually assigned technique colors</a> from.\n            </li>\n            <li>\n                <b>Comments:</b> choose which layer to inherit <a href="#help_Adding_Comments_to_Techniques">technique comments</a> from.\n            </li>\n            <li>\n                <b>States:</b> choose which layer to inherit technique <a href="#help_Disabling_Techniques">enabled/disabled states</a> from.\n            </li>\n            <li>\n                <b>Filters:</b> choose which layer to inherit <a href="#help_Filtering">layer filter configuration</a> from.\n            </li>\n        </ul>\n        <p>\n            <b>Tip:</b> Score expressions don\'t need to use variables! You can use\n            this to create a new layer with a constant score for each technique. For\n            example, if you wanted a new layer where all techniques are scored 50, you\n            could simply type 50 into the score expression input.\n        </p>\n\n        <h1 id="help_Layer_Controls">Layer Controls</h1>\n        <h2 id="help_Layer_Information">\n            <img src="assets/ic_description_black_24px.svg">\n            Layer Information\n        </h2>\n        The layer name and description can be edited in the layer information dropdown.\n        The layer name can also be edited where it appears in the tab title.\n\n        <h2 id="help_Sorting">\n            Sorting\n        </h2>\n        <p>\n            There are four modes of sorting. Clicking the sorting button will toggle between the modes.\n        </p>\n\n        <ul>\n            <li>\n                <img src="assets/ic_sort_alphabetically_ascending_black_24px.svg"/>\n                The table will sort techniques alphabietically by name in ascending order.\n            </li>\n            <li>\n                <img src="assets/ic_sort_alphabetically_descending_black_24px.svg"/>\n                The table will sort techniques alphabetically by name in descending order.\n            </li>\n            <li>\n                <img src="assets/ic_sort_numerically_ascending_black_24px.svg"/>\n                The table will sort techniques by their score in ascending order. Techniques with no score are treated as if their score is 0.\n            </li>\n            <li>\n                <img src="assets/ic_sort_numerically_descending_black_24px.svg"/>\n                The table will sort techniques by their score in descending order. Techniques with no score are treated as if their score is 0.\n            </li>\n        </ul>\n\n\n\n        <h2 id="help_Filtering">\n            <img src="assets/ic_filter_list_black_24px.svg"/>\n            Filtering\n        </h2>\n        <p>\n            The list of techniques and tactics can be filtered in the filtering menu.\n            Filters are additive - the displayed set of techniques is the logical <i>or</i>\n            of the techniques of the filters selected. There are two categories of filters that you can apply to a layer - a platform filter and a stages filter.\n        </p>\n        <h3>Platform Filter</h3>\n        <p>\n            The platform filter allows the user to control which techniques are\n            included in a layer based on whether or not a particular technique\n            applies to a particular technology platform.  Technology platforms\n            are tied to the specific technology domain you are visualizing. For\n            the Enterprise technology domain, the defined platforms are:\n            Windows, Linux and Mac.  For the Mobile technology domain, the\n            defined platforms are: Android and iOS.  By default, all platforms\n            for a given technology domain are selected in a newly-created layer.\n        </p>\n        <p>\n            Each technique in an ATT&CK matrix is tied to one or more platforms.\n            In the Navigator, if you wanted to see only those techniques in\n            Enterprise ATT&CK which applied to the Linux platform, you would\n            deselect "Windows" and "Mac" under the platform filter. If later you\n            decided to also include techniques known to apply to MacOS\n            platforms, you could select "Mac" as well and those techniques would\n            be added to the visible layer.\n        </p>\n        <h3>Stage Filter</h3>\n        <p>\n            In addition to filtering based on technology platform, you can also\n            control which techniques to include in a layer based on where they\n            fall in the cyber attack lifecycle.  The Navigator defines two\n            "stages" in this lifecycle: "prepare" - those tactics that an\n            adversary uses prior to compromise of their target and "act" - those\n            tactic categories at and after the launch of a compromise attempt.\n            By default, only the "act" stage is selected in a newly-created\n            layer to help keep the visible matrix to a manageable size. Note\n            that when viewing a layer with both the prepare and act stages\n            selected, you may find the "compact" matrix view particularly\n            useful.\n        </p>\n\n        <p>\n            <b>Tip:</b> Techniques can also be hidden from your view by using the <a href="#help_Hiding_Disabled_Techniques">hide disabled techniques</a>\n            button. Couple this with the <a href="#help_Multiselct_Interface">multiselect interface</a>\n            to hide techniques which are contained in specific threat or software groupings.\n        </p>\n\n        <h2 id="help_Scoring">\n            <img src="assets/ic_palette_black_24px.svg"/>\n            Scoring Gradient Setup\n        </h2>\n        <p>\n            Techniques which are assigned a score will be colored according to a\n            gradient defined in the scoring gradient setup menu. Technique scores are\n            mapped to a color scaled linearly between the "low value" and "high value"\n            inputs. For example, on a red-green scale, if "low value" were set to 0 and\n            "high value" were set to 50, a score of 25 would fall on yellow -- exactly\n            halfway between red and green. Scores below the low value are colored as if\n            they have the low value, and scores above the high value are colored as if\n            they have the high value.\n        </p>\n        <p>\n            Several preset gradients are present within the preset menu. If no preset\n            matches your desired gradient, you can create your own by adding and removing\n            colors using the interface.\n        </p>\n        <p>\n            <b>Tip:</b> If your scores are binary (0 or 1), consider setting the low\n            value of 0 to white and the high of 1 to some other\n            color to only color the techniques which have the value of 1.\n        </p>\n\n        <h2 id="help_Hiding_Disabled_Techniques">\n            <img src="assets/ic_visibility_off_black_24px.svg">\n            Hiding Disabled Techniques\n        </h2>\n        <p>\n            Techniques that are <a href="#help_Disabling_Techniques">disabled</a> can be hidden by toggling the "hide disabled techniques" button.\n            Hidden techniques are still present in the data when saved and can still be annotated, but won\'t be visible in the view.\n        </p>\n        <p>\n            <b>Tip:</b> This button has powerful synergy with the <a\n            href="#help_Multiselct_Interface">multiselect interface</a>. Use the\n            multiselect interface to select techniques which match your criteria,\n            disable them, and then turn on hiding disabled techniques to remove entire\n            groups of techniques from your view.\n        </p>\n\n        <h2 id="help_Changing_Views">\n            Changing Views\n        </h2>\n        <p>\n            The attack navigator has two ways to view the data. Toggle between these views\n            with the "view full/compact" button.\n        </p>\n        <h3 id="help_Full_View">\n            <img src="assets/ic_view_large_black_24px.svg">\n            Full View\n        </h3>\n        <p>\n            The full view (default), shows the full names of tactics\n            (column headers) and techniques (column cells). It also shows the\n            number of displayed techniques inside of each tactic. Techniques that are\n            hidden by filtering or by hiding disabled techniques do not count towards\n            this count.\n        </p>\n        <h3 id="help_Compact_View">\n            <img src="assets/ic_view_small_black_24px.svg">\n            Compact View\n        </h3>\n        <p>\n            The compact view is designed to fit more techniques\n            on the screen simultaneously by reducing their size. To do so all text is\n            abbreviated to acronyms. Full technique and tactic names are displayed as tooltips when you hover over a technique. Otherwise it behaves the same as the <a href="#help_Full_View">full view</a>.\n        </p>\n\n        <h1 id="help_Technique_Controls">Technique Controls</h1>\n        <p>\n            Techniques in the layer can be annotated. The technique controls on the menubar\n            are only enabled when one or more techniques are <a href="#help_Selecting_Techniques">selected</a>.\n            If multiple techniques are selected, they will all be annotated simultaneously.\n        </p>\n\n\n\n        <h2 id="help_Disabling_Techniques">\n            <img src="assets/ic_texture_black_24px.svg">\n            Disabling Techniques\n        </h2>\n        <p>\n            Clicking the "toggle state" button toggles selected techniques between an\n            enabled and disabled state. In the disabled state, the technique text is greyed\n            out and no colors (<a href="#help_Assigning_Manual_Colors">assigned manually</a> or via <a href="#help_Scoring_Techniques">score</a>)\n            will be displayed.\n        </p>\n        <p>\n            The <a href="#help_Hiding_Disabled_Techniques">hide disabled techniques</a>\n            button can be used to hide disabled techniques from the view.\n        </p>\n\n        <h2 id="help_Assigning_Manual_Colors">\n            <img src="assets/ic_format_color_fill_black_24px.svg">\n            Assigning Manual Colors\n        </h2>\n        <p>\n            Techniques can be assigned colors manually. Manually assigned colors supersede\n            colors created by score. To remove a manually assigned color, select the "no color"\n            box at the top of the interface.\n        </p>\n\n        <h2 id="help_Scoring_Techniques">\n            <img src="assets/ic_insert_chart_black_24px.svg">\n            Scoring Techniques\n        </h2>\n        <p>\n            A score is a numeric value assigned to a technique. The meaning or\n            interpretation of scores is completely up to the user user - the\n            Navigator simply visualizes the matrix based on any scores you have\n            assigned. Some possible uses of scores include:\n        </p>\n        <ul>\n            <li>\n                Assigning a score to techniques based on whether or not a given\n                adversary group has been observed to use that technique.\n            </li>\n            <li>\n                Assigning a score to techniques based on your organization\'s\n                ability to detect, prevent and/or mitigate the use of a\n                particular technique.\n            </li>\n             <li>\n                 Assigning a score to those techniques that a red-team has\n                 successfully employed during an exercise.\n             </li>\n        </ul>\n        <p>\n            By default, techniques are "unscored" meaning that no score has been\n            assigned to the technique.  Note that "unscored" and a score of zero\n            are not the same, specifically with respect to automatically\n            assigned colors. Scores show up in technique tooltips if a score has\n            been assigned. To change a technique with a numeric score to\n            unscored, select the technique and delete the score value in the score\n            control. The technique will revert to unscored.\n        </p>\n        <p>\n            Techniques are automatically assigned a color according to its\n            score. This color is determined according to the <a href="#help_Scoring">scoring gradient setup interface</a>. Colors\n            assigned <a href="#help_Assigning_Manual_Colors">manually</a>\n            supersede the score-generated color. It is a good idea to assign\n            techniques scores inside of a given range, such as 0-1 or 0-100. Set\n            the "high value" and "low value" inputs in the <a href="#help_Scoring">scoring gradient setup interface</a> to this\n            range to make sure that the color for the score is properly mapped\n            to the gradient. Techniques that are unscored are not assigned a\n            color based on the gradient - they are displayed with a white\n            background in the matrix.\n        </p>\n\n        <h2 id="help_Adding_Comments_to_Techniques">\n            <img src="assets/ic_insert_comment_black_24px.svg">\n            Adding Comments to Techniques\n        </h2>\n        <p>\n            A text comment can be added to techniques. This comment will show up in the technique tooltip if a comment has been added.\n            Techniques with a comment will be given a yellow underline.\n        </p>\n\n        <h1 id="help_Selecting_Techniques">Selecting Techniques</h1>\n\n        <p>\n            In order to be annotated, techniques must first be selected. There are multiple ways\n            to select techniques.\n        </p>\n        <h2 id="help_Selecting_with_the_Mouse">Selecting with the Mouse</h2>\n        <p>\n            Techniques can be selected using the mouse. Left click a technique to select\n            it. Shift-left-click a technique to add it or remove it from the selection. Right\n            clicking a technique will bring up a context menu with more options:\n        </p>\n        <ul>\n            <li><b>select:</b> Select only this technique.</li>\n            <li><b>add to selection:</b> Add this technique to the selection.</li>\n            <li><b>remove from selection:</b> remove this technique from the selection.</li>\n            <li><b>invert selection:</b> Select all techniques that are not currently selected and unselect all techniques that are currently selected.</li>\n            <li><b>select all:</b> Select all techniques.</li>\n            <li><b>deselect all:</b> Deselect all techniques. This action can also be completed by the "deselect" (<img src="assets/ic_close_black_24px.svg"/>) button.</li>\n            <li><b>view technique:</b> For more information / details on the technique.</li>\n        </ul>\n\n        <h2 id="help_Search_Interface">\n            <img src="assets/ic_search_black_24px.svg">\n            Search Interface\n        </h2>\n        <p>\n            The search interface provides a text input to search through techniques in the matrix.\n            Toggles in the interface allow for searching of specific technique fields (name, ID, and description).\n        </p>\n        <p>\n            The interface provides\n            buttons to select and deselect techniques. These buttons modify the currently selected techniques rather\n            than replacing then, allowing for the selection of the multiple techniques by selecting them in sequence.\n            There are \'view\' links that lead to more info on each technique.\n        </p>\n        <p>\n            Buttons labelled \'select all\' and \'deselect all\' are provided to quickly select/deselect all techniques in the results\n            area.\n        </p>\n\n        <h2 id="help_Multiselct_Interface">\n            <img src="assets/ic_playlist_add_black_24px.svg">\n            Multiselect Interface\n        </h2>\n        <p>\n            The multiselect interface provides a way to quickly select and deselect\n            groups of techniques. The interface provides two types of groupings, threat\n            groups and software. Threat groups constitute related intrusion activity\n            tracked by a common name. Software constitutes software, malware\n            or utilities that use known techniques for intrusion.\n        </p>\n        <p>\n            The interface provides\n            buttons to select and deselect techniques associated with each software or\n            threat group. These buttons modify the currently selected techniques rather\n            than replacing then, allowing for the selection of the techniques of multiple\n            threat groups or software by selecting them in sequence.\n        </p>\n        <p>\n            Threat groups and software in the list are given a gray background when all\n            of their techniques are selected, even if the selection was not made using\n            the multiselect interface.\n        </p>\n\n\n        <h1 id="notice">Notice</h1>\n        <p>Copyright 2018 The MITRE Corporation</p>\n        <p>Approved for Public Release; Distribution Unlimited. Case Number 18-0128.</p>\n        <p>\n            Licensed under the Apache License, Version 2.0 (the "License"); you may not\n            use this file except in compliance with the License. You may obtain a copy\n            of the License at\n        </p>\n        <ul style="list-style: none">\n            <li>http://www.apache.org/licenses/LICENSE-2.0</li>\n        </ul>\n\n        <p>\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an "AS IS" BASIS, WITHOUT\n            WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n            License for the specific language governing permissions and limitations\n            under the License.\n        </p>\n\n        <p>This project makes use of ATT&CK\u2122</p>\n        <a href="https://attack.mitre.org/wiki/enterprise:Terms_of_Use">ATT&CK\u2122 Terms of Use</a>\n    </div>\n'},RraH:function(e,t){e.exports=""},buoY:function(e,t){e.exports='<div [hidden]="!active" class="pane">\n    <ng-content></ng-content>\n    <ng-container *ngIf="template" [ngTemplateOutlet]="template"  [ngOutletContext]="{ data: dataContext }"></ng-container>\n</div>\n'},c6sV:function(e,t){e.exports="@charset \"UTF-8\";\n.noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Safari */\n  /* Konqueror HTML */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n  /* Non-prefixed version, currently\n                                  supported by Chrome and Opera */ }\n.dataTable {\n  overflow-x: scroll;\n  overflow-y: hidden;\n  font-size: 9pt; }\n.dataTable table {\n    table-layout: fixed; }\n.dataTable.mini {\n    text-align: center; }\n.dataTable td {\n    vertical-align: top; }\n.dataTable .column {\n    padding-right: 6px;\n    width: 1%; }\n.dataTable .techniques:hover {\n    background: #ebebeb; }\n.dataTable .cell {\n    width: 100%;\n    display: inline-block;\n    padding: 2px;\n    margin-top: 3px; }\n.dataTable .cell:not(.itemcount) {\n      border: 1px solid; }\n.dataTable .cell:not(.itemcount) .editing {\n        border-color: black; }\n.dataTable .cell:not(.itemcount):not(.editing):not(.mini) {\n        border: none;\n        padding: 3px; }\n.dataTable .cell:not(.itemcount):not(.editing).mini {\n        border-color: #b8b8b8; }\n.dataTable .cell.itemcount {\n      border: 1px solid;\n      border-color: white white black white; }\n.dataTable .editing {\n    border-color: black; }\n.dataTable .header {\n    font-weight: bold; }\n.dataTable .header:hover {\n      color: #60c5ff; }\n.dataTable .highlight {\n    background: #60c5ff; }\n.dataTable .highlight span {\n      color: black; }\n.dataTable .disabled:not(.highlight) span {\n    color: #b8b8b8; }\n.dataTable .disabled:not(.highlight).mini {\n    background: url(\"data:image/svg+xml;utf8, <svg xmlns='http://www.w3.org/2000/svg' version='1.1' preserveAspectRatio='none' viewBox='0 0 10 10'><path d='M 10 0 L 0 10' fill='none' stroke='#cccccc' stroke-width='1' /></svg>\"); }\n.dataTable .anti-highlight:not(.highlight) div:not(.editing):not(.has-score-background):not(:hover) {\n    color: #b8b8b8; }\n.dataTable .has-comment:not(.disabled) span {\n    border-bottom: 2px solid yellow; }\n.link {\n  cursor: pointer; }\n.tableContainer {\n  border: 1px solid #ddd;\n  padding: 10px; }\n.tableContainer .full {\n    overflow-x: scroll;\n    overflow-y: hidden; }\n.controlsContainer {\n  background-color: #ddd;\n  text-align: right;\n  display: block; }\n.controlsContainer ul {\n    margin: 0; }\n.controlsContainer .control-sections > li {\n    list-style: none;\n    display: inline-block;\n    border-left: 1px solid #c9c9c9;\n    padding: 0 5px 0 5px;\n    position: relative; }\n.controlsContainer .control-sections > li .section-label {\n      font-size: 8pt;\n      top: -13px;\n      position: absolute;\n      border-color: white;\n      border-style: solid;\n      border-width: 1px 1px 0 1px;\n      padding: 0 5px;\n      background-color: #ddd;\n      border-radius: 2px 2px 0 0;\n      text-align: center;\n      color: #555;\n      cursor: default;\n      -webkit-user-select: none;\n         -moz-user-select: none;\n          -ms-user-select: none;\n              user-select: none; }\n.controlsContainer .control-sections > li .control-row-item {\n      vertical-align: middle;\n      display: inline-block;\n      position: relative; }\n.controlsContainer .control-sections > li .control-row-item .control-row-button {\n        border-radius: 3px;\n        padding: 5px;\n        height: 24px;\n        cursor: pointer; }\n.controlsContainer .control-sections > li .control-row-item .control-row-button:hover {\n          background-color: #d0d0d0; }\n.controlsContainer .control-sections > li .control-row-item .control-row-button.dropdown::after {\n          font-size: 5pt;\n          content: \"\u25bc\"; }\n.dropdown-container {\n  border: 1px solid black;\n  background-color: white;\n  -webkit-box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.5);\n          box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.5);\n  position: absolute;\n  z-index: 100;\n  width: -webkit-max-content;\n  width: -moz-max-content;\n  width: max-content; }\n.dropdown-container.left {\n    right: 0; }\n.dropdown-container.inputfield {\n    width: 150px;\n    padding: 0px 10px; }\n.dropdown-container.inputfield mat-form-field {\n      width: 100%; }\n.dropdown-container.inputfield mat-form-field:first-child {\n        padding-top: 5px; }\n.multiselect-dropdown {\n  display: inline-block; }\n.colorpicker {\n  width: 88px;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  text-align: center; }\n.colorpicker .color-block {\n    cursor: pointer;\n    border: 1px solid black;\n    margin: 2.5px; }\n.colorpicker .color-block.square {\n      display: inline-block;\n      width: 15px;\n      height: 15px; }\n.colorpicker .color-block.wide {\n      display: block;\n      height: 15px;\n      font-size: 10pt;\n      color: #807f7f; }\n.gradients {\n  font-size: 8pt; }\n.gradients .display-buttons {\n    text-align: center; }\n.gradients .display-buttons .squarebutton {\n      border: 1px solid #ddd;\n      padding: 4px 0; }\n.gradients .display-buttons .squarebutton:hover {\n        background: #f1f1f1; }\n.gradients .display-buttons .squarebutton.gradient:hover {\n        text-decoration: underline; }\n.gradients .display-buttons .presetsmenu {\n      width: 90%;\n      display: inline-block; }\n.gradients .gradient-controls table {\n    padding: 0;\n    margin: 0;\n    border-collapse: collapse; }\n.gradients .gradient-controls table td.buttons > div {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap; }\n.gradients .gradient-controls table td .left, .gradients .gradient-controls table td .right {\n      display: inline-block; }\n.gradients .gradient-controls table td .left {\n      float: left; }\n.gradients .gradient-controls table td .right {\n      text-align: left; }\n.gradients .gradient-controls table td .right select {\n        width: 80px; }\n.gradients .gradient-controls table td.col2 {\n      width: 45px; }\n.gradients .gradient-controls table td.col2 input[type=number] {\n        width: 40px; }\n.gradients .gradient-controls table .minmax {\n      text-align: center;\n      background-color: #f1f1f1; }\n.gradients .gradient-controls .addcolor {\n    width: 100%; }\n.contextMenu-cover {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh; }\n.contextMenu-box {\n  position: absolute; }\n.contextMenu-box .contextMenu-section:not(:first-child) {\n    border-top: 1px solid #ddd;\n    margin-top: 2px;\n    padding-top: 2px; }\n.contextMenu-box .contextMenu-section .contextMenu-button {\n    padding: 3px;\n    cursor: pointer; }\n.contextMenu-box .contextMenu-section .contextMenu-button:hover {\n      background: #60c5ff; }\n.tooltip {\n  position: absolute;\n  z-index: 100;\n  padding: 6px;\n  border-radius: 3px;\n  background: rgba(80, 80, 80, 0.75);\n  font-size: 8pt;\n  color: white;\n  max-width: 150px;\n  overflow-x: hidden; }\n.mat-select :focus {\n  color: #63961C; }\n.filters {\n  padding: 4px; }\n.filters .filter {\n    text-align: left; }\n.filters .filter:not(:first-child) {\n      margin-top: 4px; }\n.filters .filter .filter-option:hover {\n      background: #60c5ff; }\n.multiselect {\n  text-align: center; }\n.multiselect .multiselect-grouping .multiselect-grouping-label {\n    padding: 4px;\n    font-weight: bold; }\n.multiselect .multiselect-grouping .multiselect-list {\n    text-align: left;\n    border-top: 1px solid black;\n    border-bottom: 1px solid black;\n    height: 200px;\n    overflow-y: scroll; }\n.multiselect .multiselect-grouping .multiselect-list table {\n      border-collapse: collapse; }\n.multiselect .multiselect-grouping .multiselect-list .multiselect-list-item:hover {\n      background: #60c5ff; }\n.multiselect .multiselect-grouping .multiselect-list .multiselect-list-item .multiselect-list-item-label {\n      width: 25ex; }\n.multiselect .multiselect-grouping .multiselect-list .multiselect-list-item.selected:not(:hover) {\n      background: #ddd; }\n.search {\n  text-align: center; }\n.search .search-list {\n    margin-top: 2px;\n    text-align: left;\n    border-top: 1px solid black;\n    border-bottom: 1px solid black;\n    height: 300px;\n    overflow-y: scroll; }\n.search .search-list table {\n      border-collapse: collapse;\n      width: 325px; }\n.search .search-list .search-list-item:hover {\n      background: #60c5ff; }\n.search .search-list .search-list-item .search-list-item-label {\n      width: 25ex; }\n.search .search-list .search-list-item.selected:not(:hover) {\n      background: #ddd; }\n.search-button:hover {\n  background: #60c5ff; }\n.button {\n  background-color: #ddd;\n  border: none;\n  padding: 4px 10px;\n  text-align: center;\n  margin: 2px 1px;\n  -webkit-transition: 0.3s;\n  transition: 0.3s;\n  display: inline-block;\n  text-decoration: none;\n  cursor: pointer; }\n.button:hover {\n    background-color: #b8b8b8; }\n.checkbox-custom {\n  opacity: 0;\n  position: absolute; }\n.checkbox-custom, .checkbox-custom-label {\n  display: inline-block;\n  vertical-align: middle;\n  margin: 5px;\n  cursor: pointer; }\n.checkbox-custom-label {\n  position: relative; }\n.checkbox-custom + .checkbox-custom-label:before {\n  content: '';\n  background: #fff;\n  border: 3px solid #ddd;\n  display: inline-block;\n  vertical-align: middle;\n  width: 10px;\n  height: 10px;\n  padding: 2px;\n  margin-right: 5px;\n  text-align: center; }\n.checkbox-custom:checked + .checkbox-custom-label:before {\n  background: #60c5ff;\n  -webkit-box-shadow: inset 0px 0px 0px 1px #60c5ff;\n          box-shadow: inset 0px 0px 0px 1px #60c5ff; }\n.deselectNumber {\n  font-size: 5pt;\n  bottom: 2px;\n  right: 4px;\n  position: absolute;\n  text-align: right; }\n"},gYm6:function(e,t){e.exports=".tabs {\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  margin-top: 0; }\n  .tabs > li {\n    bottom: 0;\n    position: relative;\n    display: block;\n    float: left;\n    margin-bottom: 0;\n    cursor: pointer;\n    height: 23px;\n    position: relative;\n    display: block;\n    padding: 10px 15px;\n    margin-right: 2px;\n    border: 1px solid transparent;\n    border-radius: 4px 4px 0 0; }\n  .tabs > li a {\n      font-family: 'Roboto Mono', monospace;\n      font-size: 14px;\n      text-decoration: none;\n      color: black; }\n  .tabs > li input[type=text] {\n      font-family: 'Roboto Mono', monospace;\n      font-size: 14px;\n      border: none;\n      background: none; }\n  .tabs > li input[type=text]:not(:disabled):focus {\n        background: #f1f1f1; }\n  .tabs > li.addTab {\n      font-size: 12pt;\n      cursor: pointer;\n      color: #aaaaaa; }\n  .tabs > li.addTab:hover {\n        color: black; }\n  .tabs > li:hover:not(.active), .tabs > li:focus:not(.active) {\n      text-decoration: none; }\n  .tabs > li:hover:not(.active):not(.addTab), .tabs > li:focus:not(.active):not(.addTab) {\n        border-color: #ddd #ddd #f1f1f1 #ddd;\n        background-color: #f1f1f1; }\n  .tabs > li > .tabEnumerator {\n      position: absolute;\n      top: -10px;\n      right: 5px;\n      padding: 2px 4px;\n      background: yellow;\n      border-radius: 5px; }\n  .tabs > li.active {\n      color: #555;\n      cursor: default;\n      background-color: #ddd;\n      border: 1px solid transparent; }\n  .tabs:before {\n    display: table;\n    content: \" \"; }\n  .tabs:after {\n    display: table;\n    clear: both;\n    content: \" \"; }\n  .tab-close {\n  margin-left: 10px;\n  color: gray;\n  text-align: right;\n  cursor: pointer; }\n  .tab-close:hover {\n    color: black; }\n  .newTab {\n  padding: 5% 20%; }\n  .border {\n  border: 1px solid #ddd; }\n  .layerOpTable td {\n  padding: 5px; }\n  .headers-align .mat-expansion-panel-header-title,\n.headers-align .mat-expansion-panel-header-description {\n  -ms-flex-preferred-size: 0;\n      flex-basis: 0; }\n  .headers-align .mat-expansion-panel-header-description {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center; }\n  input[type=file] {\n  padding: 5px;\n  margin: 5px;\n  width: 300px;\n  background-color: #f1f1f1;\n  border-radius: 0px; }\n  input[type=file]:hover {\n    background-color: #ddd; }\n  .helpButtonContainer {\n  text-align: center;\n  margin-top: 20px; }\n  .help {\n  padding: 10px; }\n  .header div {\n  display: inline-block;\n  cursor: pointer; }\n  .header .logo {\n  position: absolute;\n  top: 0;\n  right: 0;\n  margin-right: 40px;\n  padding: 5px;\n  height: 2ex; }\n  .header .logo a {\n    text-decoration: none;\n    color: #b01a1a;\n    font-weight: 500; }\n  .header .helpButton {\n  position: fixed;\n  top: 0;\n  right: 0;\n  background: white;\n  border-style: solid;\n  border-color: #ddd;\n  border-width: 0 0 1px 1px;\n  border-radius: 0 0 0 50%;\n  text-align: center;\n  width: 2ex;\n  height: 2ex;\n  padding: 5px; }\n  .header .helpButton:hover {\n    background: #f1f1f1; }\n"},sQHO:function(e,t){e.exports="tabs {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  font-size: 9pt; }\n"},x35b:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n("3j3K"),o=n("O61y"),a=n("Qbdm"),r=n("Fzro"),s=(n("owTz"),n("KN8t")),l=n("DUFE"),c=n("gsbp"),d=n("NVOs"),h=n("7u3n"),u=n("kINy"),p=n("q2BM"),f=n("crii"),g=n("XZJt"),b=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},m=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},v=function(){function e(e){this.http=e,this.actTacticsOrder=[],this.prepareTacticsOrder=[],this.totalTacticsOrder=[],this.enterpriseAttackURL="https://raw.githubusercontent.com/mitre/cti/master/enterprise-attack/enterprise-attack.json",this.pre_attack_URL="https://raw.githubusercontent.com/mitre/cti/master/pre-attack/pre-attack.json",this.mobileDataURL="https://raw.githubusercontent.com/mitre/cti/master/mobile-attack/mobile-attack.json",this.tacticsURL="assets/tacticsData.json"}return e.prototype.setUpURLs=function(e,t,n,i){this.enterpriseAttackURL=e,this.pre_attack_URL=t,this.mobileDataURL=n,this.tacticsURL=i},e.prototype.retreiveConfig=function(e){return void 0===e&&(e=!1),!e&&this.configData$||(this.configData$=this.http.get("./assets/config.json").map(function(e){return e.json()})),this.configData$},e.prototype.getEnterpriseData=function(e){return void 0===e&&(e=!1),!e&&this.enterpriseData$||(this.enterpriseData$=g.a.forkJoin(this.http.get(this.enterpriseAttackURL).map(function(e){return e.json()}),this.http.get(this.pre_attack_URL).map(function(e){return e.json()}))),this.enterpriseData$},e.prototype.getMobileData=function(e){return void 0===e&&(e=!1),!e&&this.mobileData$||(this.mobileData$=g.a.forkJoin(this.http.get(this.mobileDataURL).map(function(e){return e.json()}),this.http.get(this.pre_attack_URL).map(function(e){return e.json()}))),this.mobileData$},e.prototype.getTactics=function(e){return void 0===e&&(e=!1),!e&&this.tacticData$||(this.tacticData$=this.http.get(this.tacticsURL).map(function(e){return e.json()})),this.tacticData$},e.prototype.setTacticOrder=function(e){for(var t=0;t<e.length;t++){var n=e[t].phase,i=e[t].tactic;0===n.localeCompare("prepare")?this.prepareTacticsOrder.push(i):this.actTacticsOrder.push(i),this.totalTacticsOrder.push(i)}},e.prototype.techniquesToTactics=function(e){if(0===e.length)return[];var t={};return e.forEach(function(e){e.tactics.forEach(function(n){t[n]?t[n].push(e):t[n]=[e]})}),t},e.prototype.tacticNames=function(e){if(0===e.length)return[];var t=[],n=new Set;e.forEach(function(e){e.tactics.forEach(function(e){n.add(e)})});for(var i=0;i<this.totalTacticsOrder.length;i++){var o=this.totalTacticsOrder[i];n.has(o)&&t.push(o)}return t},e}();v=b([Object(i.B)(),m("design:paramtypes",["function"==typeof(y="undefined"!=typeof r.a&&r.a)&&y||Object])],v);var y,w,x=function(){return function(e,t,n,i,o,a,r){this.name=e,this.description=t,this.tactics=n,this.id=a,this.platforms=o,this.external_references_url=i,this.technique_id=r}}(),T=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},_=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},q=function(){return function(e){this.viewContainer=e}}();q=T([Object(i.t)({selector:"[dynamic-tabs]"}),_("design:paramtypes",["function"==typeof(w="undefined"!=typeof i._15&&i._15)&&w||Object])],q);var M=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},k=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},S=function(){return function(){this.active=!1,this.isCloseable=!1,this.showScoreVariables=!1}}();M([Object(i.E)("tabTitle"),k("design:type",String)],S.prototype,"title",void 0),M([Object(i.E)(),k("design:type",Object)],S.prototype,"active",void 0),M([Object(i.E)(),k("design:type",Object)],S.prototype,"isCloseable",void 0),M([Object(i.E)(),k("design:type",Object)],S.prototype,"template",void 0),M([Object(i.E)(),k("design:type",Object)],S.prototype,"dataContext",void 0),M([Object(i.E)(),k("design:type",Object)],S.prototype,"showScoreVariables",void 0),S=M([Object(i.n)({selector:"tab",template:n("buoY"),styles:[n("RraH")]})],S);var C="1.0",O=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},D=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},I=function(){function e(){this.domain="mitre-mobile",this.viewModels=[]}return e.prototype.newViewModel=function(e){var t=new j(e,this.domain);return this.viewModels.push(t),t},e.prototype.destroyViewModel=function(e){for(var t=0;t<this.viewModels.length;t++)if(this.viewModels[t]==e)return void this.viewModels.splice(t,1)},e.prototype.getViewModelUID=function(e){for(var t=0;t<this.viewModels.length;t++)if(this.viewModels[t]==e)return t;return-1},e.prototype.layerLayerOperation=function(e,t,n,i,o,a,r){var s=new j("layer by operation",this.domain);if(e){e=e.toLowerCase();var l=0,c=new Map,d=new Map;t.forEach(function(e,t){e.techniqueVMs.forEach(function(e,t){d.has(e.techniqueID)||(c.set(l,e),d.set(e.techniqueID,l),l+=1)})});var h={},u=new Map,p=function(e){if(u.has(e)){var t=u.get(e);t++,u.set(e,t)}else u.set(e,1)};t.forEach(function(e,t){for(var n=[],i=0;i<l;i++){var o=void 0;if(e.hasTechniqueVM(c.get(i).techniqueID)){var a=e.getTechniqueVM(c.get(i).techniqueID).score;""==a?(o=0,p(c.get(i).techniqueID)):isNaN(Number(a))?(o=0,p(c.get(i).techniqueID)):o=Number(a)}else o=0,p(c.get(i).techniqueID);n[i]=o}h[t]=n});var f=math.eval(e,h);if("number"!=typeof f)for(var g=0;g<f.length;g++){var b=c.get(g),m=new z(b.techniqueID);"boolean"==typeof f[g]&&(f[g]=f[g]?"1":"0",s.gradient.maxValue=1,s.gradient.minValue=0,s.gradient.setGradientPreset("whiteblue")),m.score=String(f[g]),s.setTechniqueVM(m)}else"boolean"==typeof f&&(f=f?"1":"0",s.gradient.maxValue=1,s.gradient.minValue=0,s.gradient.setGradientPreset("whiteblue")),c.forEach(function(e,t){var n=new z(e.techniqueID);n.score=f,s.setTechniqueVM(n)});u.forEach(function(e,n){e==t.size&&(s.getTechniqueVM(n).score="")})}function v(e,t){e.techniqueVMs.forEach(function(e){var n=s.hasTechniqueVM(e.techniqueID)?s.getTechniqueVM(e.techniqueID):new z(e.techniqueID);n[t]=e[t],s.techniqueVMs.set(e.techniqueID,n)})}return n&&v(n,"comment"),i&&v(i,"color"),o&&v(o,"enabled"),r&&(s.filters=JSON.parse(JSON.stringify(r.filters))),s.name=a,this.viewModels.push(s),s.updateGradient(),s},e}();I=O([Object(i.B)(),D("design:paramtypes",[])],I);var E,L,V,R,F=function(){function e(){this.labelToColor={white:"#ffffff",red:"#ff6666",orange:"#ffaf66",yellow:"#ffe766",green:"#8ec843",blue:"#66b1ff",purple:"#ff66f4"},this.colors=[new N("red"),new N("green")],this.options=["white","red","orange","yellow","green","blue","purple"],this.minValue=0,this.maxValue=100,this.presets={redgreen:[new N("red"),new N("yellow"),new N("green")],greenred:[new N("green"),new N("yellow"),new N("red")],bluered:[new N("blue"),new N("purple"),new N("red")],redblue:[new N("red"),new N("purple"),new N("blue")],whiteblue:[new N("white"),new N("blue")],whitered:[new N("white"),new N("red")]},this.setGradientPreset("redgreen")}return e.prototype.serialize=function(){var e=[],t=this;this.colors.forEach(function(n){var i=n.color in t.labelToColor?t.labelToColor[n.color]:tinycolor(n.color).toHexString();e.push(i)});var n={colors:e,minValue:this.minValue,maxValue:this.maxValue};return JSON.stringify(n,null,"\t")},e.prototype.deSerialize=function(e){var t=JSON.parse(e);if(function(e){for(var t=0;t<e.length;t++)if("string"!=typeof e[t]||!tinycolor(e[t]).isValid())return console.error("TypeError:",e[t],"(",typeof e[t],")","is not a color-string"),!1;return!0}(t.colors)){this.colors=[];var n=this;t.colors.forEach(function(e){n.colors.push(new N(e))})}else console.error("TypeError: gradient colors field is not a color-string[]");this.minValue=t.minValue,this.maxValue=t.maxValue,this.updateGradient()},e.prototype.presetToTinyColor=function(e){var t=[],n=this;return this.presets[e].forEach(function(e){t.push(n.labelToColor[e.color])}),tinygradient(t).css("linear","to right")},e.prototype.setGradientPreset=function(e){this.colors=this.presets[e],this.updateGradient()},e.prototype.updateGradient=function(){var e=[],t=this;this.colors.forEach(function(n){n.color in t.labelToColor?e.push(t.labelToColor[n.color]):e.push(n.color)}),this.gradient=tinygradient(e),this.gradientRGB=this.gradient.rgb(100)},e.prototype.addColor=function(){this.colors.push(new N(this.colors[this.colors.length-1].color))},e.prototype.removeColor=function(e){this.colors.splice(e,1)},e.prototype.getColor=function(e){var t;if(this.gradient||this.updateGradient(),0!=e.length){if((t=Number(e))>=this.maxValue)return this.gradientRGB[this.gradientRGB.length-1];if(t<=this.minValue)return this.gradientRGB[0];var n=(t-this.minValue)/(this.maxValue-this.minValue)*100;return this.gradientRGB[Math.round(n)]}},e}(),N=function(){return function(e){this.color=e}}(),j=function(){function e(e,t){this.description="",this.sorting=0,this.viewFullTable=!0,this.hideDisabled=!1,this.highlightedTactic="",this.highlightedTechnique=null,this.gradient=new F,this.techniqueVMs=new Map,this.selectedTechniques=[],this.domain=t,this.filters=new A(this.domain),this.name=e}return e.prototype.getTechniqueVM=function(e){return this.techniqueVMs.get(e)},e.prototype.setTechniqueVM=function(e){this.techniqueVMs.has(e.techniqueID)&&this.techniqueVMs.delete(e.techniqueID),this.techniqueVMs.set(e.techniqueID,e)},e.prototype.hasTechniqueVM=function(e){return this.techniqueVMs.has(e)},e.prototype.addToTechniqueSelection=function(e){this.isTechniqueSelected(e)||this.selectedTechniques.push(e.technique_id)},e.prototype.addToTechniqueSelection_id=function(e){this.isTechniqueSelected_id(e)||this.selectedTechniques.push(e)},e.prototype.removeFromTechniqueSelection=function(e){if(this.isTechniqueSelected(e)){var t=this.selectedTechniques.indexOf(e.technique_id);this.selectedTechniques.splice(t,1)}},e.prototype.removeFromTechniqueSelection_id=function(e){if(this.isTechniqueSelected_id(e)){var t=this.selectedTechniques.indexOf(e);this.selectedTechniques.splice(t,1)}},e.prototype.replaceTechniqueSelection=function(e){this.selectedTechniques=[e.technique_id]},e.prototype.clearTechniqueSelection=function(){this.selectedTechniques=[]},e.prototype.selectAllTechniques=function(){this.clearTechniqueSelection(),this.invertSelection()},e.prototype.invertSelection=function(){var e=JSON.parse(JSON.stringify(this.selectedTechniques)),t=this;this.clearTechniqueSelection(),this.techniqueVMs.forEach(function(n,i){e.includes(n.techniqueID)||t.selectedTechniques.push(n.techniqueID)})},e.prototype.isEditingAllTechniques=function(){var e=JSON.stringify(this.selectedTechniques);this.selectAllTechniques();var t=JSON.stringify(this.selectedTechniques);return this.selectedTechniques=JSON.parse(e),e==t},e.prototype.isTechniqueSelected=function(e){return this.selectedTechniques.includes(e.technique_id)},e.prototype.isTechniqueSelected_id=function(e){return this.selectedTechniques.includes(e)},e.prototype.getSelectedTechniqueCount=function(){return this.selectedTechniques.length},e.prototype.isCurrentlyEditing=function(){return this.getSelectedTechniqueCount()>0},e.prototype.editSelectedTechniques=function(e,t){for(var n=0;n<this.selectedTechniques.length;n++){this.getTechniqueVM(this.selectedTechniques[n])[e]=t}},e.prototype.getEditingCommonValue=function(e){if(!this.isCurrentlyEditing())return"";for(var t=this.getTechniqueVM(this.selectedTechniques[0])[e],n=1;n<this.selectedTechniques.length;n++)if(this.getTechniqueVM(this.selectedTechniques[n])[e]!=t)return"";return t},e.prototype.serialize=function(){var e=[];this.techniqueVMs.forEach(function(t,n){t.modified()&&e.push(JSON.parse(t.serialize()))});var t={};return t.name=this.name,t.version=String("1.0"),t.domain=this.domain,t.description=this.description,t.filters=JSON.parse(this.filters.serialize()),t.sorting=this.sorting,t.viewFullTable=this.viewFullTable,t.hideDisabled=this.hideDisabled,t.techniques=e,t.gradient=JSON.parse(this.gradient.serialize()),JSON.stringify(t,null,"\t")},e.prototype.deSerialize=function(e){var t=JSON.parse(e);if(this.name=t.name,this.domain=t.domain,"description"in t&&("string"==typeof t.description?this.description=t.description:console.error("TypeError: description field is not a string")),"filters"in t&&this.filters.deSerialize(t.filters),"sorting"in t&&("number"==typeof t.sorting?this.sorting=t.sorting:console.error("TypeError: sorting field is not a number")),"viewFullTable"in t&&("boolean"==typeof t.viewFullTable?this.viewFullTable=t.viewFullTable:console.error("TypeError: viewFullTable field is not a boolean")),"hideDisabled"in t&&("boolean"==typeof t.hideDisabled?this.hideDisabled=t.hideDisabled:console.error("TypeError: hideDisabled field is not a boolean")),"gradient"in t&&(this.gradient=new F,this.gradient.deSerialize(JSON.stringify(t.gradient))),"techniques"in t)for(var n=0;n<t.techniques.length;n++){var i=new z("");i.deSerialize(JSON.stringify(t.techniques[n])),this.setTechniqueVM(i)}this.updateGradient()},e.prototype.addGradientColor=function(){this.gradient.addColor(),this.updateGradient()},e.prototype.removeGradientColor=function(e){this.gradient.removeColor(e),this.updateGradient()},e.prototype.updateGradient=function(){this.gradient.updateGradient();var e=this;this.techniqueVMs.forEach(function(t,n){t.scoreColor=e.gradient.getColor(t.score)})},e}(),z=function(){function e(e){this.score="",this.color="",this.enabled=!0,this.comment="",this.techniqueID=e}return e.prototype.print=function(){console.log(this.serialize()),console.log(this)},e.prototype.modified=function(){return""!=this.score||""!=this.color||!this.enabled||""!=this.comment},e.prototype.serialize=function(){var e={};return e.techniqueID=this.techniqueID,""===this.score||isNaN(Number(this.score))||(e.score=Number(this.score)),e.color=this.color,e.comment=this.comment,e.enabled=this.enabled,JSON.stringify(e,null,"\t")},e.prototype.deSerialize=function(e){var t=JSON.parse(e);"techniqueID"in t?this.techniqueID=t.techniqueID:console.error("ERROR: TechniqueID field not present in technique"),"comment"in t&&("string"==typeof t.comment?this.comment=t.comment:console.error("TypeError: technique comment field is not a number:",t.comment,"(",typeof t.comment,")")),"color"in t&&""!==t.color&&("string"==typeof t.color&&tinycolor(t.color).isValid()?this.color=t.color:console.error("TypeError: technique color field is not a color-string:",t.color,"(",typeof t.color,")")),"score"in t&&("number"==typeof t.score?this.score=String(t.score):console.error("TypeError: technique score field is not a number:",t.score,"(",typeof t.score,")")),"enabled"in t&&("boolean"==typeof t.enabled?this.enabled=t.enabled:console.error("TypeError: technique enabled field is not a boolean:",t.enabled,"(",typeof t.enabled,")"))},e}(),A=function(){function e(e){this.stages={options:["prepare","act"],selection:["act"]},"mitre-enterprise"==e?this.platforms={selection:["windows","linux","mac"],options:["windows","linux","mac"]}:"mitre-mobile"==e&&(this.platforms={selection:["android","ios"],options:["android","ios"]})}return e.prototype.toggleInFilter=function(e,t){if(this[e].options.includes(t))if(this[e].selection.includes(t)){var n=this[e].selection.indexOf(t);this[e].selection.splice(n,1)}else this[e].selection.push(t);else console.log("not a valid option to toggle",t,this[e])},e.prototype.inFilter=function(e,t){return this[e].selection.includes(t)},e.prototype.serialize=function(){return JSON.stringify({stages:this.stages.selection,platforms:this.platforms.selection})},e.prototype.deSerialize=function(e){var t=function(e){for(var t=0;t<e.length;t++)if("string"!=typeof e[t])return console.error("TypeError:",e[t],"(",typeof e[t],")","is not a string"),!1;return!0};e.platforms&&(t(e.platforms)?this.platforms.selection=e.platforms:console.error("TypeError: filter platforms field is not a string[]")),e.stages&&(t(e.stages)?this.stages.selection=e.stages:console.error("TypeError: filter stages field is not a string[]"))},e}(),G=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},P=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},U=function(){function e(e,t,n){this._componentFactoryResolver=e,this.viewModelsService=t,this.dataService=n,this.configData={},this.ds=null,this.vms=null,this.techniques=[],this.dynamicTabs=[],this.coloring=null,this.comments=null,this.enabledness=null,this.filters=null,this.scoreExpression="";this.ds=n,this.viewModelsService=t}return e.prototype.ngAfterContentInit=function(){var e=this;this.ds.retreiveConfig().subscribe(function(t){e.viewModelsService.domain=t.domain,e.newLayer(),0===e.dynamicTabs.filter(function(e){return e.active}).length&&e.selectTab(e.dynamicTabs[0])})},e.prototype.openTab=function(e,t,n,i,o,a){if(void 0===i&&(i=!1),void 0===o&&(o=!0),void 0===a&&(a=!1),t||console.error("ERROR: no template defined for tab titled ''",e,"''"),!a)for(var r=0;r<this.dynamicTabs.length;r++)if(this.dynamicTabs[r].title===e)return void this.selectTab(this.dynamicTabs[r]);var s=this._componentFactoryResolver.resolveComponentFactory(S),l=this.dynamicTabPlaceholder.viewContainer.createComponent(s),c=l.instance;if(c.title=e,c.template=t,c.dataContext=n,c.isCloseable=i,c.showScoreVariables=!1,o&&0!==this.dynamicTabs.length){for(r=0;r<this.dynamicTabs.length;r++)if(this.dynamicTabs[r].active)return this.closeActiveTab(!0),this.dynamicTabs.splice(r,0,l.instance),void this.selectTab(this.dynamicTabs[r])}else this.dynamicTabs.push(l.instance),this.selectTab(this.dynamicTabs[this.dynamicTabs.length-1])},e.prototype.selectTab=function(e){this.dynamicTabs.forEach(function(e){return e.active=!1}),e.active=!0},e.prototype.closeTab=function(e,t){void 0===t&&(t=!1);var n=0;this.viewModelsService.destroyViewModel(e.dataContext);for(var i=0;i<this.dynamicTabs.length;i++)if(this.dynamicTabs[i]===e){this.dynamicTabs[i].active&&(n=0==i&&this.dynamicTabs.length>1?1:i>0?2:3),this.dynamicTabs.splice(i,1),this.dynamicTabPlaceholder.viewContainer.remove(i);break}if(!t)switch(n){case 0:break;case 1:case 2:this.selectTab(this.dynamicTabs[0]);break;case 3:this.newBlankTab();break;default:console.error("post closetab action not specified (this should never happen)")}},e.prototype.closeActiveTab=function(e){void 0===e&&(e=!1);var t=this.dynamicTabs.filter(function(e){return e.active});t.length>0&&this.closeTab(t[0],e)},e.prototype.getActiveTab=function(){return this.dynamicTabs.filter(function(e){return e.active})[0]},e.prototype.newBlankTab=function(e){void 0===e&&(e=!1),this.openTab("new tab",this.blankTab,null,!0,e,!0)},e.prototype.newHelpTab=function(e,t){void 0===e&&(e=!1),void 0===t&&(t=!1),e&&this.closeActiveTab(),this.openTab("help",this.helpTab,null,!0,e,!1)},e.prototype.getUniqueLayerName=function(e){var t,n,i=0,o=this.viewModelsService.viewModels;for(var a=0;a<o.length;a++)if(o[a].name.startsWith(e))if(o[a].name!==e){var r=o[a].name.substring(e.length,o[a].name.length);t=r,void 0,n=Math.floor(Number(t)),String(n)===t&&(i=Math.max(i,Number(r)+1))}else i=Math.max(i,1);return 0!=i&&(e+=i),e},e.prototype.newLayer=function(){var e=this.getUniqueLayerName("layer"),t=this.viewModelsService.newViewModel(e);this.openTab(e,this.layerTab,t,!0,!0,!0)},e.prototype.indexToChar=function(e){for(var t=0,n=0;n<e;n++)this.dynamicTabs[n].dataContext&&t++;return String.fromCharCode(97+t)},e.prototype.charToIndex=function(e){for(var t=0,n=0;n<this.dynamicTabs.length;n++)if(this.dynamicTabs[n].dataContext){var i=String.fromCharCode(97+t);if(t++,i==e)return n}},e.prototype.layerByOperation=function(){var e=new Map,t=this.scoreExpression.match(/\b[a-z]\b/g),n=this;t&&t.forEach(function(t){var i=n.charToIndex(t),o=n.dynamicTabs[i].dataContext;e.set(t,o)});var i=this.getUniqueLayerName("layer by operation");try{var o=this.viewModelsService.layerLayerOperation(this.scoreExpression,e,this.comments,this.coloring,this.enabledness,i,this.filters);this.openTab(i,this.layerTab,o,!0,!0,!0)}catch(e){alert("Math error"+e.message)}},e.prototype.getScoreExpressionError=function(){var e=this;try{var t=e.scoreExpression.match(/\b[a-z]\b/g),n={};if(t){var i="";if(t.forEach(function(t){n[t]=0,"undefined"==typeof e.charToIndex(t)&&(i="Variable "+t+" does not match any layers")}),i.length>0)return i}math.eval(e.scoreExpression,n);return null}catch(e){return e.message}},e.prototype.openUploadPrompt=function(){document.getElementById("uploader").click()},e.prototype.loadLayer=function(){var e=document.getElementById("uploader");e.files.length<1?alert("You must select a file to upload!"):this.readJSONFile(e.files[0])},e.prototype.readJSONFile=function(e){var t=this,n=new FileReader,i=this.viewModelsService.newViewModel("loading layer...");n.onload=function(e){var o=n.result;try{i.deSerialize(o),t.openTab("new layer",t.layerTab,i,!0,!0,!0)}catch(e){alert("ERROR: Either the file is not JSON formatted, or the file structure is invalid."),t.viewModelsService.destroyViewModel(i)}},n.readAsText(e)},e.prototype.alphabetical=function(e){return/^[a-z]+$/.test(e)},e}();G([Object(i._13)("blankTab"),P("design:type",Object)],U.prototype,"blankTab",void 0),G([Object(i._13)("layerTab"),P("design:type",Object)],U.prototype,"layerTab",void 0),G([Object(i._13)("helpTab"),P("design:type",Object)],U.prototype,"helpTab",void 0),G([Object(i._13)(q),P("design:type","function"==typeof(E="undefined"!=typeof q&&q)&&E||Object)],U.prototype,"dynamicTabPlaceholder",void 0),U=G([Object(i.n)({selector:"tabs",template:n("yY5u"),styles:[n("gYm6")],providers:[I]}),P("design:paramtypes",["function"==typeof(L="undefined"!=typeof i.p&&i.p)&&L||Object,"function"==typeof(V="undefined"!=typeof I&&I)&&V||Object,"function"==typeof(R="undefined"!=typeof v&&v)&&R||Object])],U);var B,H=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},J=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},$=function(){function e(e){this.dataService=e,this.nav_version=C,Array.prototype.includes=function(e){for(var t=0;t<this.length;t++)if(this[t]===e)return!0;return!1}}return e.prototype.promptNavAway=function(e){e.returnValue="Are you sure you want to navigate away? Your data may be lost!"},e}();H([Object(i._13)(U),J("design:type",Object)],$.prototype,"tabsComponent",void 0),H([Object(i.z)("window:beforeunload",["$event"]),J("design:type",Function),J("design:paramtypes",[Object]),J("design:returntype",void 0)],$.prototype,"promptNavAway",null),$=H([Object(i.n)({selector:"app-root",template:n("5xMp"),styles:[n("sQHO")],providers:[v]}),J("design:paramtypes",["function"==typeof(B="undefined"!=typeof v&&v)&&B||Object])],$);var K=n("lDdF"),Y=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},W=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},X=function(){function e(e,t,n,i){var o=this;this.dataService=e,this.tabs=t,this.sanitizer=n,this.viewModelsService=i,this.actTechniques=[],this.prepareTechniques=[],this.techniques=[],this.tactics={},this.tacticStages={},this.filteredTechniques=[],this.filteredTactics={},this.tacticDisplayNames={},this.threatGroupList=[],this.softwareGroupList=[],this.selectedTechniques=new Set,this.searchString="",this.searchResults=[],this.searchingName=!0,this.searchingID=!0,this.searchingDescription=!0,this.currentDropdown="",this.ds=null,this.commentEditField="",this.scoreEditField="",this.contextMenuVisible=!1,this.contextMenuSelectedTechnique=null,this.tooltipDirection=!1,this.ds=e,this.ds.retreiveConfig().subscribe(function(t){o.ds.setUpURLs(t.enterprise_attack_url,t.pre_attack_url,t.mobile_data_url,t.tactics_url);var n=t.domain;e.getTactics().subscribe(function(t){o.constructTacticList(t,n),"mitre-enterprise"===n?e.getEnterpriseData().subscribe(function(e){var t=e[1].objects.concat(e[0].objects);o.establishData(t)}):"mitre-mobile"===n&&e.getMobileData().subscribe(function(e){var t=e[1].objects.concat(e[0].objects);o.establishData(t)})})})}return e.prototype.clickTactic=function(e){this.viewModel.highlightedTactic==e?this.viewModel.highlightedTactic=null:this.viewModel.highlightedTactic=e},e.prototype.containsActiveTechnique=function(e){if(null==this.viewModel.highlightedTechnique||null==this.viewModel.highlightedTactic)return!1;for(var t=0;t<this.techniques.length;t++)if(this.techniques[t].technique_id===this.viewModel.highlightedTechnique.technique_id)return this.techniques[t].tactics.includes(e)},e.prototype.updateSearchDropdown=function(){this.searchResults=[];var e=[],t=[],n=[];if(null!==this.searchString&&""!==this.searchString){for(var i=this.searchString.toLowerCase(),o=new RegExp(i,"g"),a=0;a<this.filteredTechniques.length;a++){if(this.searchingName)-1!==this.filteredTechniques[a].name.toLowerCase().search(o)&&e.push(this.filteredTechniques[a]);if(this.searchingID)-1!==this.filteredTechniques[a].technique_id.toLowerCase().search(o)&&t.push(this.filteredTechniques[a]);if(this.searchingDescription)-1!==this.filteredTechniques[a].description.toLowerCase().search(o)&&n.push(this.filteredTechniques[a])}var r=new Set(e.concat(t,n));this.searchResults=Array.from(r)}},e.prototype.selectAllInSearch=function(){for(var e=0;e<this.searchResults.length;e++)this.viewModel.addToTechniqueSelection(this.searchResults[e])},e.prototype.deselectAllInSearch=function(){for(var e=0;e<this.searchResults.length;e++)this.viewModel.removeFromTechniqueSelection(this.searchResults[e])},e.prototype.filterTechniques=function(){var e=this.techniques;e=this.filterStages(e),e=this.filterPlatforms(e),this.viewModel.hideDisabled&&(e=this.removeDisabled(e));var t=this;e.sort(function(e,n){var i=t.viewModel.getTechniqueVM(e.technique_id),o=t.viewModel.getTechniqueVM(n.technique_id),a=String(i.score).length>0?Number(i.score):0,r=String(o.score).length>0?Number(o.score):0;switch(t.viewModel.sorting){case 0:return e.name.localeCompare(n.name);case 1:return n.name.localeCompare(e.name);case 2:return a===r?e.name.localeCompare(n.name):a-r;case 3:return a===r?e.name.localeCompare(n.name):r-a;default:return e.name.localeCompare(n.name)}}),this.filteredTechniques=e,this.tactics=this.ds.techniquesToTactics(e)},e.prototype.filterStages=function(e){var t=[],n=this.viewModel.filters.stages.selection,i=!1,o=!1;return 1===n.length?0===n[0].localeCompare("act")?o=!0:i=!0:n.length>1&&(i=!0,o=!0),i&&(t=t.concat(this.prepareTechniques)),o&&(t=t.concat(this.actTechniques)),t},e.prototype.filterPlatforms=function(e){var t=this.viewModel.filters.platforms.selection;if(0===t.length)return[];if(t.length===this.viewModel.filters.platforms.options.length)return e;for(var n=[],i=0;i<e.length;i++){var o=e[i],a=o.platforms;if(null===a||void 0===a)n.push(o);else for(var r=!1,s=0;s<a.length;s++){for(var l=a[s].toLowerCase(),c=0;c<t.length;c++){var d=t[c].toLowerCase();if(-1!==l.indexOf(d)){r=!0,n.push(o);break}}if(r)break}}return n},e.prototype.removeDisabled=function(e){var t=[],n=this;return e.forEach(function(e){!n.viewModel.getTechniqueVM(e.technique_id).enabled&&n.viewModel.hideDisabled||t.push(e)}),t},e.prototype.saveLayerLocally=function(){var e=this.viewModel.serialize(),t=new Blob([e],{type:"text/json"});K.saveAs(t,this.viewModel.name.replace(/ /g,"_")+".json")},e.prototype.ngAfterViewInit=function(){document.getElementById("tooltip"+this.viewModelsService.getViewModelUID(this.viewModel)).style.left=-1e4+"px"},e.prototype.constructTacticList=function(e,t){var n=[],i=!1;for(var o in e){var a=e[o],r=a.domains;i=!1;for(var s=0;s<r.length;s++)r[s]!==t||i||(i=!0,n=n.concat(a.tactics))}this.ds.setTacticOrder(n),this.setTacticPhases(n)},e.prototype.setTacticPhases=function(e){this.tacticStages={};for(var t=0;t<e.length;t++){var n=e[t];this.tacticStages[n.tactic]=n.phase}},e.prototype.establishData=function(e){for(var t={},n={},i={},o={},a=0;a<e.length;a++){var r=e[a];"attack-pattern"===r.type?t[r.id]=r:"intrusion-set"===r.type?n[r.id]=r:"malware"===r.type||"tool"===r.type?i[r.id]=r:"relationship"===r.type&&(o[r.id]=r)}this.establishTechniques(t),this.setTacticDisplayNames(),this.filterTechniques(),this.establishThreatDataHolders(n,i),this.establishThreatData(t,o),this.searchResults=[]},e.prototype.establishTechniques=function(e){var t=[],n=[];for(var i in e){var o=e[i],a=o.kill_chain_phases,r=[];void 0!==a&&a.forEach(function(e){r.push(e.phase_name)});var s="none",l="blank";void 0!==o.external_references&&(s=o.external_references[0].url,l=o.external_references[0].external_id);var c=new x(o.name,o.description,r,s,o.x_mitre_platforms,o.id,l);"act"===this.tacticStages[a[0].phase_name]?n.push(c):t.push(c)}if(t.sort(function(e,t){return e.name>t.name?1:t.name>e.name?-1:0}),n.sort(function(e,t){return e.name>t.name?1:t.name>e.name?-1:0}),this.actTechniques=n,this.prepareTechniques=t,this.techniques=this.actTechniques.concat(this.prepareTechniques),this.filteredTechniques=this.techniques,this.tactics=this.dataService.techniquesToTactics(this.techniques),this.viewModel){for(var d=0;d<this.techniques.length;d++)this.viewModel.hasTechniqueVM(this.techniques[d].technique_id)||this.viewModel.setTechniqueVM(new z(this.techniques[d].technique_id));this.viewModel.updateGradient()}else console.error("no viewmodel to initialize data for!")},e.prototype.setTacticDisplayNames=function(){for(var e in this.tacticDisplayNames={},this.tactics){var t=e.replace(new RegExp("-","g")," ");t=this.toUpperCase(t),this.tacticDisplayNames[e]=t}},e.prototype.establishThreatDataHolders=function(e,t){for(var n in e){for(var i=e[n],o="",a=0;a<i.external_references.length;a++)if("mitre-attack"===i.external_references[a].source_name){o=i.external_references[a].url;break}var r=new ie(i.name,"threat-group",n,o);this.threatGroupList.push(r)}for(var s in t){var l=t[s],c="";for(a=0;a<l.external_references.length;a++)if(l.external_references[a].source_name.startsWith("mitre-attack")){c=l.external_references[a].url;break}var d=new ie(l.name,"software",s,c);this.softwareGroupList.push(d)}this.threatGroupList.sort(function(e,t){return e.name>t.name?1:t.name>e.name?-1:0}),this.softwareGroupList.sort(function(e,t){return e.name>t.name?1:t.name>e.name?-1:0})},e.prototype.selectSecurityInstance=function(e){var t=this;e.techniques.forEach(function(e){t.viewModel.addToTechniqueSelection_id(e)})},e.prototype.deselectSecurityInstance=function(e){var t=this;e.techniques.forEach(function(e){t.viewModel.removeFromTechniqueSelection_id(e)})},e.prototype.establishThreatData=function(e,t){for(var n in t){for(var i=t[n],o=i.target_ref,a=i.source_ref,r=null,s=null,l=[this.softwareGroupList,this.threatGroupList],c=0;c<l.length&&!r;c++)for(var d=l[c],h=0;h<d.length&&!r;h++){var u=d[h];u.id===a&&(r=u)}for(c=0;c<this.techniques.length&&!s;c++)this.techniques[c].id==o&&(s=this.techniques[c]);r&&s&&r.techniques.push(s.technique_id)}var p=[],f=[];this.softwareGroupList.forEach(function(e){e.techniques.length>0&&p.push(e)}),this.threatGroupList.forEach(function(e){e.techniques.length>0&&f.push(e)}),this.softwareGroupList=p,this.threatGroupList=f},e.prototype.openURL=function(e,t){var n=window.open(t.external_references_url);n?n.focus():alert("Please allow popups for this website")},e.prototype.toUpperCase=function(e){return e.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()})},e.prototype.techniqueSelectEvent=function(e,t){t?this.viewModel.isTechniqueSelected(e)?this.viewModel.removeFromTechniqueSelection(e):this.viewModel.addToTechniqueSelection(e):this.viewModel.getSelectedTechniqueCount()>1?this.viewModel.replaceTechniqueSelection(e):this.viewModel.isTechniqueSelected(e)?this.viewModel.clearTechniqueSelection():this.viewModel.replaceTechniqueSelection(e),this.viewModel.isCurrentlyEditing()?this.populateEditFields():["comment","score","colorpicker"].includes(this.currentDropdown)&&(this.currentDropdown="")},e.prototype.populateEditFields=function(){this.commentEditField=this.viewModel.getEditingCommonValue("comment"),this.scoreEditField=this.viewModel.getEditingCommonValue("score")},e.prototype.rightClickTechnique=function(e,t){this.contextMenuVisible=!0,this.contextMenuSelectedTechnique=e;var n=document.getElementById("contextMenu"+this.viewModelsService.getViewModelUID(this.viewModel));return n.style.left=t.pageX+"px",n.style.top=t.pageY+"px",!1},e.prototype.onMouseMove=function(e){var t=document.getElementById("tooltip"+this.viewModelsService.getViewModelUID(this.viewModel));this.tooltipDirection=document.body.clientWidth-e.pageX<150,null!==this.viewModel.highlightedTechnique&&"mousemove"==e.type?(t.style.left=this.tooltipDirection?e.pageX-20-t.clientWidth+"px":e.pageX+20+"px",t.style.top=e.pageY+"px"):t.style.left=-1e4+"px"},e.prototype.setSelectedState=function(){var e=this.viewModel.getEditingCommonValue("enabled");""===e?this.viewModel.editSelectedTechniques("enabled",!1):this.viewModel.editSelectedTechniques("enabled",!e),this.filterTechniques()},e.prototype.sanitize=function(e){return this.sanitizer.bypassSecurityTrustStyle(e)},e.prototype.getClass=function(e,t){void 0===t&&(t=!1);var n="link noselect cell";return this.viewModel.getTechniqueVM(e.technique_id).enabled||(n+=" disabled"),this.viewModel.isTechniqueSelected(e)&&(n+=" editing"),this.viewModel.highlightedTechnique&&this.viewModel.highlightedTechnique.technique_id==e.technique_id&&(n+=" highlight"),t&&(n+=" mini"),this.viewModel.getTechniqueVM(e.technique_id).comment.length>0&&(n+=" has-comment"),this.getTechniqueBackground(e)&&(n+=" has-score-background"),n},e.prototype.getTechniqueBackground=function(e){var t=this.viewModel.getTechniqueVM(e.technique_id);return!t.enabled||this.viewModel.highlightedTechnique&&this.viewModel.highlightedTechnique.technique_id==e.technique_id?{}:t.color?{background:t.color}:t.score?{background:t.scoreColor}:void 0},e.prototype.getTechniqueTextColor=function(e,t){var n=this.viewModel.getTechniqueVM(e.technique_id);return n.enabled?this.viewModel.highlightedTechnique&&this.viewModel.highlightedTechnique.technique_id==e.technique_id?"black":n.color?tinycolor.mostReadable(n.color,["white","black"]):n.score&&!isNaN(Number(n.score))?tinycolor.mostReadable(n.scoreColor,["white","black"]):t?"#aaaaaa":"black":"#aaaaaa"},e.prototype.validateScoreInput=function(e){return isNaN(Number(this.scoreEditField))},e.prototype.acronym=function(e){var t=["on","and","the","with","a","an","of","in","for","from"],n="",i=e.split(" ");if(i.length>1){for(var o=0;n.length<4&&o<i.length;)if(t.includes(i[o].toLowerCase()))o++;else{for(var a=0;a<i[o].length;a++){var r=i[o].charCodeAt(a);if(!(r<48||r>57&&r<65||r>90&&r<97||r>122)){n+=i[o].charAt(a).toUpperCase();break}}o++}return n}return i[0].charAt(0).toUpperCase()},e.prototype.isSecurityInstanceSelected=function(e){for(var t=0;t<e.techniques.length;t++){var n=e.techniques[t];if(!this.viewModel.isTechniqueSelected_id(n))return!1}return!0},e}();Y([Object(i.E)(),W("design:type","function"==typeof(Q="undefined"!=typeof j&&j)&&Q||Object)],X.prototype,"viewModel",void 0),Y([Object(i.z)("mousemove",["$event"]),Object(i.z)("mouseout",["$event"]),W("design:type",Function),W("design:paramtypes",[Object]),W("design:returntype",void 0)],X.prototype,"onMouseMove",null),X=Y([Object(i.n)({selector:"DataTable",template:n("JhGu"),styles:[n("c6sV")],providers:[v]}),W("design:paramtypes",["function"==typeof(Z="undefined"!=typeof v&&v)&&Z||Object,"function"==typeof(ee="undefined"!=typeof U&&U)&&ee||Object,"function"==typeof(te="undefined"!=typeof a.c&&a.c)&&te||Object,"function"==typeof(ne="undefined"!=typeof I&&I)&&ne||Object])],X);var Q,Z,ee,te,ne,ie=function(){return function(e,t,n,i){this.name=e,this.type=t,this.id=n,this.techniques=[],this.url=i}}(),oe=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},ae=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},re=function(){return function(){this.nav_version=C}}();re=oe([Object(i.n)({selector:"help",template:n("RZ7q"),styles:[n("5KBY")]}),ae("design:paramtypes",[])],re);var se=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},le=function(){return function(){}}();le=se([Object(i.L)({declarations:[$,X,U,S,q,re],imports:[a.a,r.b,s.a,l.b,d.c,d.h,l.a,c.a,h.a,u.a,p.a,f.a],exports:[l.b,l.a,c.a,h.a,u.a,p.a],providers:[],bootstrap:[$],entryComponents:[S]})],le);Object(i._20)(),Object(o.a)().bootstrapModule(le).catch(function(e){return console.log(e)})},yY5u:function(e,t){e.exports='<link href="https://fonts.googleapis.com/css?family=Roboto+Mono:500" rel="stylesheet">\n\n<div *ngIf="dynamicTabs.length > 0">\n    <ul class="tabs">\n        \x3c!-- dynamic tabs (can be opened and closed) --\x3e\n        <li *ngFor="let tab of dynamicTabs; let $i = index" (click)="selectTab(tab)" [class.active]="tab.active">\n            \x3c!-- <input *ngIf="tab.dataContext" [disabled]="!tab.active" [style.cursor]="tab.active ? \'text\' : \'pointer\'" type="text" [(ngModel)]="tab.dataContext.name" [style.width]="tab.dataContext ? ((tab.dataContext.name.length) * 8.4) + \'px\' : \'\'"> --\x3e\n            \x3c!-- <a   *ngIf="!tab.dataContext" href="#" [style.cursor]="tab.active ? \'default\' : \'pointer\'">{{tab.title}}</a> --\x3e\n\n            \x3c!-- <input [disabled]="!tab.active || !tab.dataContext" (click)="!tab.active || !tab.dataContext ? selectTab(tab) : selectTab(tab)" [style.cursor]="tab.active ? tab.dataContext ? \'text\' : \'default\' : \'pointer\'" type="text" [(ngModel)]="tab.dataContext ? tab.dataContext.name : tab.title" [style.width]="tab.dataContext ? ((tab.dataContext.name.length) * 8.4) + \'px\' : (tab.title.length * 8.4) + \'px\' "> --\x3e\n            \x3c!-- <input [id]="\'tabtitleinput\' + $i" (click)="!tab.active || !tab.dataContext ? selectTab(tab, \'tabtitleinput\' + $i) : continue" [style.cursor]="tab.active ? tab.dataContext ? \'text\' : \'default\' : \'pointer\'" type="text" [(ngModel)]="tab.dataContext ? tab.dataContext.name : tab.title" [style.width]="tab.dataContext ? ((tab.dataContext.name.length) * 8.4) + \'px\' : (tab.title.length * 8.4) + \'px\' "> --\x3e\n\n            <a *ngIf="!tab.active || !tab.dataContext" href="#" [style.cursor]="tab.active ? \'default\' : \'pointer\'">{{tab.dataContext ? tab.dataContext.name : tab.title}}</a>\n            <input *ngIf="!(!tab.active || !tab.dataContext)" [style.cursor]="tab.active ? tab.dataContext ? \'text\' : \'default\' : \'pointer\'" type="text" [(ngModel)]="tab.dataContext.name" [style.width]="tab.dataContext ? ((tab.dataContext.name.length) * 8.4) + \'px\' : (tab.title.length * 8.4) + \'px\' ">\n            <span class="tab-close" *ngIf="tab.isCloseable" (click)="closeTab(tab)">x</span>\n\n            <span class="tabEnumerator" *ngIf="getActiveTab().showScoreVariables && tab.dataContext && alphabetical(indexToChar($i))">{{indexToChar($i)}}</span>\n        </li>\n        \x3c!-- open new tab button --\x3e\n        \x3c!-- <li (click)="openTab(\'new tab\', blankTab, null, true, false, true)"> --\x3e\n        <li *ngIf="dynamicTabs.length < 10" class="addTab" (click)="newBlankTab()">\n            +\n        </li>\n    </ul>\n</div>\n<div *ngIf="dynamicTabs.length == 0" class="newTab">\n    \x3c!-- you shouldn\'t ever see this, but just in case --\x3e\n    <button (click)="newBlankTab()">Start</button>\n</div>\n\n\n<ng-content></ng-content>\n<ng-template dynamic-tabs #container></ng-template>\n\n\n<ng-template #blankTab>\n    \x3c!-- <div style="background-color: #ddd; height: 3px;">\n    </div> --\x3e\n    <div class="newTab border">\n        <mat-accordion class="headers-align">\n            <mat-expansion-panel #newlayer hideToggle="true" (click)="newLayer(); newlayer.close()">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        Create New Layer\n                    </mat-panel-title>\n                    <mat-panel-description>\n                        Create a new empty layer\n                    </mat-panel-description>\n\n                </mat-expansion-panel-header>\n                \x3c!-- this content will never be shown because clicking opens a new layer tab --\x3e\n            </mat-expansion-panel>\n\n            <mat-expansion-panel #uploadlayer hideToggle="true" (click)="openUploadPrompt(); uploadlayer.close()">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        Upload Existing Layer\n                    </mat-panel-title>\n                    <mat-panel-description>\n                        Upload a layer from your computer\n                    </mat-panel-description>\n\n                </mat-expansion-panel-header>\n                <input id="uploader" type="file" style="display: none" (change)="loadLayer()"/>\n                \x3c!-- this content will never be shown because clicking opens a new layer tab --\x3e\n            </mat-expansion-panel>\n\n            \x3c!-- <mat-expansion-panel>\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                    Open Existing Layer\n                    </mat-panel-title>\n                    <mat-panel-description>\n                        Upload a layer from your computer, or load from online\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n                <button mat-button (click)="openUploadPrompt()">Upload from local</button>\n                <input id="uploader" type="file" style="display: none" (change)="loadLayer()"/>\n\n                <button mat-button>Load from remote</button> --\x3e\n            \x3c!-- </mat-expansion-panel> --\x3e\n\n            \x3c!-- <mat-expansion-panel [disabled]="viewModelsService.viewModels.length < 2"> --\x3e\n            <mat-expansion-panel (opened)="getActiveTab().showScoreVariables = true" (closed)="getActiveTab().showScoreVariables = false">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        Create Layer from other layers\n                    </mat-panel-title>\n                    <mat-panel-description>\n                        Choose layers to inherit properties from\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n\n                <table class="layerOpTable">\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <input type="text"\n                                       matInput\n                                       placeholder="score expression"\n                                       [(ngModel)]="scoreExpression"\n                                       (keyup)="scoreExpression = scoreExpression.toLowerCase()"\n                                       style="letter-spacing: 2px" />\n                                <mat-hint style="color: red" align="start">{{getScoreExpressionError()}}</mat-hint>\n                            </mat-form-field>\n                        </td>\n                        <td>\n                            Use constants (numbers) and layer variables (yellow, above) to write an expression for the initial value of scores in the new layer. A full list of supported operations can be found <a href="http://mathjs.org/docs/expressions/syntax.html#operators">here</a>. Leave blank to initialize scores to 0.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <mat-select placeholder="coloring" [(ngModel)]="coloring">\n                                    <mat-option [value]="null">none</mat-option>\n                                    <mat-option *ngFor="let vm of viewModelsService.viewModels" [value]=vm>{{vm.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                        <td>\n                            Choose which layer to import manually assigned colors from. Leave blank to initialze with no colors.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <mat-select placeholder="comments" [(ngModel)]="comments">\n                                    <mat-option [value]="null">none</mat-option>\n                                    <mat-option *ngFor="let vm of viewModelsService.viewModels" [value]=vm>{{vm.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                        <td>\n                            Choose which layer to import comments from. Leave blank to initialize with no comments.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <mat-select placeholder="states" [(ngModel)]="enabledness">\n                                    <mat-option [value]="null">none</mat-option>\n                                    <mat-option *ngFor="let vm of viewModelsService.viewModels" [value]=vm>{{vm.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                        <td>\n                            Choose which layer to import enabled/disabled states from. Leave blank to initialize all to enabled.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <mat-select placeholder="filters" [(ngModel)]="filters">\n                                    <mat-option [value]="null">none</mat-option>\n                                    <mat-option *ngFor="let vm of viewModelsService.viewModels" [value]=vm>{{vm.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                        <td>\n                            Choose which layer to import filters - stages and platforms - from. Leave blank to initialize with no filters.\n                        </td>\n                    </tr>\n                </table>\n\n                <button mat-button [disabled]="getScoreExpressionError()" (click)="layerByOperation(); showScoreVariables = false">Create</button>\n\n            </mat-expansion-panel>\n        </mat-accordion>\n\n        \x3c!-- <button (click)="showLayerOperations = !showLayerOperations">Create Layer from other layers</button> <br />\n        <div *ngIf="showLayerOperations" class="layerOperationsPanel">\n\n        </div> --\x3e\n        <div class="helpButtonContainer">\n            <button mat-button (click)="newHelpTab(replace=false, forceNew=false)">help</button>\n        </div>\n\n    </div>\n\n</ng-template>\n\n<ng-template #layerTab let-data="data">\n    <DataTable [viewModel]=data></DataTable>\n</ng-template>\n\n<ng-template #helpTab>\n    <div class="border help">\n        <help></help>\n    </div>\n\n</ng-template>\n\n<div class="header" >\n    <div class="logo">\n        <a href="http://attack.mitre.org">MITRE ATT&CK<sup style="font-size: 6pt">TM</sup> Navigator</a>\n    </div>\n    <div class="helpButton" matTooltip="help" (click)="newHelpTab(forceNew=false)">\n        ?\n    </div>\n</div>\n'}},[0]);